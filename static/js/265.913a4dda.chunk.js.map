{"version":3,"file":"static/js/265.913a4dda.chunk.js","mappings":"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","sources":["components/atoms/Input/FormInputFIeld.jsx","components/molecules/ProfileDetails.jsx","Schemas/profileSchema.js","components/atoms/DatePickerAtom.jsx","components/organisms/ProfileEdit.jsx","components/organisms/ProfileUser.jsx","components/pages/Profile.jsx"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nconst FormInputText = ({ name, control, label, ...props }) => {\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({\r\n        field: { onChange, value },\r\n        fieldState: { error },\r\n        formState,\r\n      }) => (\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          required\r\n          value={value}\r\n          id={name}\r\n          name={name}\r\n          label={label}\r\n          helperText={error ? error.message : null}\r\n          onChange={onChange}\r\n          error={!!error}\r\n          {...props}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormInputText;\r\n","import { EmailOutlined } from \"@mui/icons-material\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { BsFileEarmarkPostFill } from \"react-icons/bs\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport { FiUser } from \"react-icons/fi\";\r\n\r\nconst ProfileDetails = ({ profile }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <EmailOutlined size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>{profile.email}</Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <FiUser size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>{profile.username}</Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <BsFileEarmarkPostFill size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>Posts {profile.posts.length}</Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <FaUserFriends size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>\r\n          Friends {profile.friends.length}\r\n        </Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import * as yup from \"yup\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst today = dayjs().startOf(\"day\"); // Get today's date\r\n\r\nconst usernameRegex = /^[a-zA-Z0-9_-]{3,16}$/;\r\n\r\nexport const profileSchema = yup.object().shape({\r\n  username: yup\r\n    .string(\"Username must be a string\")\r\n    .matches(\r\n      usernameRegex,\r\n      \"Username must be 3-16 characters long and can only contain alphanumeric characters, underscores and hyphens\"\r\n    )\r\n    .required(\"This field can't be empty\"),\r\n  email: yup\r\n    .string(\"Email must be a string\")\r\n    .email(\"Must be a valid email address\")\r\n    .required(\"This field can't be empty\"),\r\n  dateOfBirth: yup\r\n    .mixed()\r\n    .nullable(true) // Allow null values for dateOfBirth field\r\n    .test(\r\n      \"valid-date\",\r\n      \"Date of birth must be a valid date\",\r\n      (value) => value === null || dayjs(value).isValid()\r\n    )\r\n    .test(\r\n      \"max-date\",\r\n      \"Date of birth cannot be after today's date\",\r\n      (value) =>\r\n        value === null ||\r\n        dayjs(value).isBefore(today) ||\r\n        dayjs(value).isSame(today)\r\n    ),\r\n});\r\n","import { ErrorMessage } from \"@hookform/error-message\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nconst DatePickerAtom = ({ control, errors }) => {\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name=\"dateOfBirth\"\r\n      render={({ field, fieldState }) => (\r\n        <>\r\n          <DatePicker\r\n            {...field}\r\n            inputFormat=\"yyyy-MM-dd\"\r\n            label=\"Date of Birth\"\r\n            sx={{ width: \"100%\" }}\r\n            error={!!fieldState.error}\r\n          />\r\n          <ErrorMessage\r\n            errors={errors}\r\n            name=\"dateOfBirth\"\r\n            render={({ message }) => (\r\n              <Typography sx={{ color: \"red\" }}>{message}</Typography>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DatePickerAtom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport FormInputText from \"../atoms/Input/FormInputFIeld\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { constants } from \"../../constants\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport { profileSchema } from \"../../Schemas/profileSchema\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\nimport api from \"../../api/api\";\r\nimport { fetchUser } from \"../../utils/fetchUser\";\r\nimport { DatePicker } from \"@mui/x-date-pickers-pro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport { updateUser } from \"../../storage/authReducers\";\r\nimport DatePickerAtom from \"../atoms/DatePickerAtom\";\r\n\r\nconst ProfileEdit = ({ setIsEdit }) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const loading = useSelector((state) => state.loading);\r\n  const [error, setError] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n\r\n  const {\r\n    handleSubmit,\r\n    reset,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      username: user ? user.username : \"\",\r\n      email: user ? user.email : \"\",\r\n      dateOfBirth: user ? dayjs(user.dateOfBirth) : null,\r\n    },\r\n    resolver: yupResolver(profileSchema),\r\n  });\r\n\r\n  const onSubmit = async (data, event) => {\r\n    event.preventDefault();\r\n\r\n    const username = event.target.username.value;\r\n    const email = event.target.email.value;\r\n    const dateOfBirth = new Date(data.dateOfBirth); // Convert dayjs object to Date object\r\n    const formattedDate = dayjs(dateOfBirth).format(\"YYYY MM DD\");\r\n\r\n    try {\r\n      dispatch(\r\n        updateUser(user._id, image, email, username, formattedDate, navigate)\r\n      );\r\n\r\n      setIsEdit(false);\r\n    } catch (err) {\r\n      setError(err.response);\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return <div>Loading...</div>; // Render a loading indicator while fetching data\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          my: 8,\r\n          mx: 4,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          padding: \"2rem\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h2\">Profile</Typography>\r\n        <ProfilePictureUpload\r\n          image={image}\r\n          setImage={setImage}\r\n          profile={user}\r\n        />\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          sx={{ mt: 1 }}\r\n        >\r\n          <FormInputText\r\n            control={control}\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            autoFocus\r\n          />\r\n          <FormInputText\r\n            control={control}\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            autoFocus\r\n          />\r\n          {error && (\r\n            <Typography\r\n              sx={{ textAlign: \"center\", color: \"red\" }}\r\n              position={\"center\"}\r\n              variant=\"h5\"\r\n            >\r\n              {error}\r\n            </Typography>\r\n          )}\r\n          <DatePickerAtom control={control} errors={errors} />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            disabled={loading}\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","import { Box, Button, IconButton, Paper } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\nimport ProfileDetails from \"../molecules/ProfileDetails\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProfileEdit from \"./ProfileEdit\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport { LoadingScreen } from \"../atoms/LoadingScreen\";\r\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\r\nimport { HiOutlineUserRemove } from \"react-icons/hi\";\r\nimport { addFriend, removeFriend } from \"../../storage/authReducers\";\r\n\r\nconst ProfileUser = ({ profile }) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const [error, setError] = useState(\"\");\r\n  const isFriend = () => {\r\n    return user.friends.some((friend) => friend.friendId === profile._id);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  if (!user || !profile) return <LoadingScreen />;\r\n  if (isEdit) return <ProfileEdit setIsEdit={setIsEdit} />;\r\n\r\n  const onAddFriend = async () => {\r\n    try {\r\n      dispatch(addFriend(profile._id));\r\n    } catch (err) {\r\n      setError(err.response.data.error);\r\n    }\r\n  };\r\n\r\n  const onRemoveFriend = async () => {\r\n    try {\r\n      dispatch(removeFriend(profile._id));\r\n    } catch (err) {\r\n      setError(err.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"5rem 0\",\r\n      }}\r\n    >\r\n      <Paper elevation={3} sx={{ padding: \"2rem 5rem\", display: \"flex\" }}>\r\n        <ProfilePictureUpload profile={profile} />\r\n        <div style={{ borderRight: \"1px solid #ccc\", margin: \"0 1rem\" }}></div>\r\n        <ProfileDetails profile={profile} />\r\n      </Paper>\r\n      {profile._id === user._id ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          sx={{ width: \"640px\" }}\r\n          onClick={handleEdit}\r\n        >\r\n          Edit profile\r\n        </Button>\r\n      ) : !isFriend() ? (\r\n        <IconButton onClick={onAddFriend}>\r\n          <AiOutlineUserAdd style={{ color: \"green\" }} />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton onClick={onRemoveFriend}>\r\n          <HiOutlineUserRemove style={{ color: \"red\" }} />\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../organisms/Navbar/NavBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { fetchUser } from \"../../utils/fetchUser\";\r\nimport AllPosts from \"../organisms/AllPosts\";\r\nimport ProfileUser from \"../organisms/ProfileUser\";\r\nimport Footer from \"../organisms/Footer/Footer\";\r\nimport StickyFooter from \"../organisms/StickyFooter\";\r\nimport { LoadingScreen } from \"../atoms/LoadingScreen\";\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n  const { id } = useParams();\r\n\r\n  const loading = useSelector((state) => state.loader);\r\n  const error = useSelector((state) => state.error);\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      fetchUser(navigate);\r\n    } else if (!profile && id) {\r\n      fetchUser(navigate, { id, setProfile });\r\n    }\r\n\r\n    return () => {\r\n      if (profile) {\r\n        setProfile(null); // Reset profile state to null when navigating away\r\n      }\r\n    };\r\n  }, [user, id, profile, navigate]);\r\n\r\n  if (!user || !profile) return <LoadingScreen />;\r\n  return (\r\n    <>\r\n      {loading && <p>Loading...</p>}\r\n      <Navbar />\r\n\r\n      <Box>\r\n        <ProfileUser profile={profile} />\r\n        <hr />\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <AllPosts userId={profile._id} />\r\n        </Box>\r\n      </Box>\r\n      {error && (\r\n        <Typography\r\n          sx={{ textAlign: \"center\", color: \"red\" }}\r\n          position={\"center\"}\r\n        >\r\n          {error.message}\r\n        </Typography>\r\n      )}\r\n      <Footer />\r\n      {/* <StickyFooter /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["_ref","name","control","label","props","_objectWithoutProperties","_excluded","_jsx","Controller","render","_ref2","_ref2$field","field","onChange","value","error","fieldState","formState","TextField","_objectSpread","variant","margin","fullWidth","required","id","helperText","message","profile","_jsxs","Box","sx","display","flexDirection","justifyContent","children","alignItems","EmailOutlined","size","Typography","ml","email","style","border","borderBottom","FiUser","username","BsFileEarmarkPostFill","posts","length","FaUserFriends","friends","today","dayjs","startOf","profileSchema","yup","shape","matches","dateOfBirth","nullable","test","isValid","isBefore","isSame","errors","_Fragment","DatePicker","inputFormat","width","ErrorMessage","_ref3","color","setIsEdit","navigate","useNavigate","dispatch","useDispatch","user","useSelector","state","loading","_useState","useState","_useState2","_slicedToArray","setError","_useState3","_useState4","image","setImage","_useForm","useForm","defaultValues","resolver","yupResolver","handleSubmit","reset","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","event","formattedDate","wrap","_context","prev","next","preventDefault","target","Date","format","updateUser","_id","err","response","stop","_x","_x2","apply","arguments","my","mx","padding","ProfilePictureUpload","component","noValidate","mt","FormInputText","autoFocus","textAlign","position","DatePickerAtom","Button","type","mb","disabled","Footer","isEdit","LoadingScreen","ProfileEdit","onAddFriend","addFriend","onRemoveFriend","_callee2","_context2","removeFriend","Paper","elevation","borderRight","ProfileDetails","onClick","some","friend","friendId","IconButton","HiOutlineUserRemove","AiOutlineUserAdd","useParams","loader","setProfile","useEffect","fetchUser","Navbar","ProfileUser","AllPosts","userId"],"sourceRoot":""}