{"version":3,"file":"static/js/460.c5781031.chunk.js","mappings":"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","sources":["Schemas/postSchema.js","components/atoms/FormInputHashtag.jsx","components/organisms/CreatePost.jsx","components/organisms/SearchBar.jsx","components/organisms/LeftPanel.jsx","ads.js","components/organisms/RightPanel.jsx","components/Chat/TextInput.js","components/Chat/ChatMessage.js","components/Chat/ChatUi.js","components/molecules/ChatWindow.jsx","components/pages/Home.jsx"],"sourcesContent":["import * as yup from \"yup\";\r\n\r\nexport const postSchema = yup.object().shape({\r\n  body: yup\r\n    .string(\"body must be a string\")\r\n    .required(\"This field can't be empty\")\r\n    .min(1, \"Must be at least 1 character.\"),\r\n  hashtags: yup\r\n    .array()\r\n    .of(\r\n      yup\r\n        .string(\"Hashtag must be a string\")\r\n        .min(1, \"Must be at least 1 character.\")\r\n        .max(15, \"Must be a maximum of 15 characters\")\r\n    )\r\n    .required(\"This field can't be empty\"),\r\n});\r\n","import { Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { TagsInput } from \"react-tag-input-component\";\r\n\r\nconst FormInputText = ({ name, control, label, ...props }) => {\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({\r\n        field: { onChange, onBlur, value, ref },\r\n        fieldState: { error },\r\n        formState,\r\n      }) => (\r\n        <>\r\n          <TagsInput\r\n            value={value}\r\n            id={name}\r\n            name={name}\r\n            onBlur={onBlur}\r\n            inputRef={ref}\r\n            placeHolder={label}\r\n            onChange={onChange}\r\n            {...props}\r\n          />\r\n          <Box sx={{ textAlign: \"center\" }}>\r\n            <span>Press enter to add hashtag..</span>\r\n          </Box>\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormInputText;\r\n","import { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CreatePost = ({ children, onSubmit, handleSubmit }) => {\r\n  const loading = useSelector((state) => state.loading);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      component=\"main\"\r\n      sx={{\r\n        // height: \"50vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Grid item xs={10} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <Box\r\n          sx={{\r\n            my: 8,\r\n            mx: 4,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Create your own post!\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            sx={{ mt: 1 }}\r\n          >\r\n            {children}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              disabled={loading}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import {\r\n  Box,\r\n  Button,\r\n  InputAdornment,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../../api/api\";\r\nimport { constants } from \"../../constants\";\r\nimport PostOverlay from \"../molecules/PostOverlay\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\n\r\nconst SearchBar = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n  const toggleOverlay = () => {\r\n    setShowOverlay((prev) => !prev);\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const delay = setTimeout(() => {\r\n      setSearchTerm(search);\r\n    }, 300); // Adjust the delay as needed (in milliseconds)\r\n\r\n    return () => {\r\n      clearTimeout(delay);\r\n    };\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    const handleSearch = async () => {\r\n      if (!searchTerm) {\r\n        setPosts([]);\r\n        setUsers([]);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await api.get(`/search/${searchTerm}`);\r\n        const { users, posts } = response.data;\r\n        setPosts(posts);\r\n        setUsers(users);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    handleSearch();\r\n  }, [searchTerm]);\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"1rem\",\r\n      }}\r\n    >\r\n      <TextField\r\n        id=\"search\"\r\n        variant=\"outlined\"\r\n        name=\"search\"\r\n        label=\"Search ..\"\r\n        onKeyPress={handleKeyPress}\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AiOutlineSearch />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        sx={{ width: { xs: \"90%\", sm: \"60%\", md: \"50%\", lg: \"20%\" } }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          width: { xs: \"90%\", sm: \"60%\", md: \"50%\", lg: \"20%\" },\r\n        }}\r\n      >\r\n        {users.length > 0 && (\r\n          <Box>\r\n            <Box\r\n              sx={{\r\n                width: \"100%\",\r\n                padding: \"15px\",\r\n                border: \"black 1px solid\",\r\n                color: \"white\",\r\n                background:\r\n                  \"linear-gradient(90deg, rgba(20, 163, 214, 0.91) 15%, rgba(0,0,0,1) 85%)\",\r\n              }}\r\n            >\r\n              <Typography>Users</Typography>\r\n            </Box>\r\n            <Box sx={{ textAlign: \"center\" }}>\r\n              {users.map((user) => (\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"filled\"\r\n                  color=\"primary\"\r\n                  onClick={() =>\r\n                    navigate(\r\n                      `${constants.BASE_URL}/${constants.USER}/${user._id}`\r\n                    )\r\n                  }\r\n                  key={user._id}\r\n                  sx={{\r\n                    border: \"solid black 1px\",\r\n                    borderTop: \"none\",\r\n                    padding: \"15px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"start\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <ProfilePictureUpload\r\n                    profile={user}\r\n                    size=\"45\"\r\n                    noMargin\r\n                    margin=\"1\"\r\n                  />\r\n                  {user.username}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        {posts.length > 0 && (\r\n          <Box>\r\n            <Box\r\n              sx={{\r\n                width: \"100%\",\r\n                padding: \"15px\",\r\n                border: \"solid black 1px\",\r\n                borderTop: \"none\",\r\n                color: \"white\",\r\n                background:\r\n                  \"linear-gradient(90deg, rgba(20, 163, 214, 0.91) 15%, rgba(0,0,0,1) 85%)\",\r\n              }}\r\n            >\r\n              <Typography>{`Posts starting with tag \"${searchTerm}\"`}</Typography>\r\n            </Box>\r\n            <Box sx={{ textAlign: \"center\" }}>\r\n              {posts.map((post) => (\r\n                <>\r\n                  {showOverlay && (\r\n                    <PostOverlay\r\n                      onClose={toggleOverlay}\r\n                      post={post}\r\n                      postUser={post.user}\r\n                      profilePicture={post.user.profilePicture}\r\n                    />\r\n                  )}\r\n                  <Button\r\n                    onClick={toggleOverlay}\r\n                    fullWidth\r\n                    variant=\"filled\"\r\n                    color=\"primary\"\r\n                    sx={{\r\n                      border: \"solid black 1px\",\r\n                      borderTop: \"none\",\r\n                      padding: \"15px\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"start\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Typography key={post._id}>{post.body}</Typography>\r\n                  </Button>\r\n                </>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Stack,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\nimport { BiPlus } from \"react-icons/bi\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { constants } from \"../../constants\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport AddPostOverlay from \"../molecules/AddPostOverlay\";\r\n\r\nconst LeftPanel = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const [displayedFriends, setDisplayedFriends] = useState(2);\r\n  const navigate = useNavigate();\r\n  const friends = user.friends.slice(0, displayedFriends);\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n\r\n  const handleShowMoreFriends = () => {\r\n    if (displayedFriends + 2 <= user.friends.length) {\r\n      setDisplayedFriends(displayedFriends + 2);\r\n    } else {\r\n      setDisplayedFriends(user.friends.length);\r\n    }\r\n  };\r\n\r\n  // const toggleOverlay = () => {\r\n  //   setShowOverlay((prev) => !prev);\r\n  // };\r\n\r\n  return (\r\n    <Stack\r\n      sx={{\r\n        width: \"20%\",\r\n        padding: \"3rem\",\r\n        display: { xs: \"none\", sm: \"none\", md: \"none\", lg: \"block\" },\r\n      }}\r\n      elevation={3}\r\n      component={Paper}\r\n    >\r\n      {/* {showOverlay && <AddPostOverlay onClose={toggleOverlay} />} */}\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n      >\r\n        <ProfilePictureUpload size={85} profile={user} />\r\n        <Typography\r\n          variant=\"h5\"\r\n          sx={{\r\n            marginLeft: \"1rem\",\r\n            textTransform: \"capitalize\",\r\n            display: { sx: \"none\", lg: \"block\" },\r\n          }}\r\n        >\r\n          {user.username}\r\n        </Typography>\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button sx={{ margin: \"3rem 0\" }}>\r\n          <Link\r\n            to={`${constants.BASE_URL}/${constants.USER}/${user._id}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <CgProfile size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n            <Typography>Profile</Typography>\r\n          </Link>\r\n        </Button>\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button sx={{ margin: \"3rem 0\" }}>\r\n          <Link\r\n            to={`${constants.BASE_URL}/${constants.ADDPOST}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <BiPlus size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n            <Typography>Add a post</Typography>\r\n          </Link>\r\n        </Button>\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button sx={{ margin: \"3rem 0\" }}>\r\n          <Link\r\n            to={`${constants.BASE_URL}/${constants.FRIENDS}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FaUserFriends size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n            <Typography>Friends</Typography>\r\n          </Link>\r\n        </Button>\r\n        <hr />\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            // backgroundColor: \"grey\",\r\n          }}\r\n        >\r\n          {friends.map((friend, index) => (\r\n            <Button\r\n              sx={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n              color=\"success\"\r\n              onClick={() =>\r\n                navigate(\r\n                  `${constants.BASE_URL}/${constants.USER}/${friend.friendId}`\r\n                )\r\n              }\r\n              key={index}\r\n            >\r\n              <Typography>{friend.friendName}</Typography>\r\n              <hr style={{ width: \"100%\" }} />\r\n            </Button>\r\n          ))}\r\n          {displayedFriends < user.friends.length && (\r\n            <IconButton onClick={handleShowMoreFriends}>\r\n              <BiPlus />\r\n              <Typography>Show more friends</Typography>\r\n            </IconButton>\r\n          )}\r\n        </Box>\r\n        {user.friends.length <= 0 && <hr />}\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default LeftPanel;\r\n","export const ads = [\r\n  {\r\n    path: require(\"./assets/AnkaraUniv.png\"),\r\n    link: \"http://comp.eng.ankara.edu.tr/\",\r\n    alt: \"Ankara University\",\r\n  },\r\n  {\r\n    path: require(\"./assets/background/react2.webp\"),\r\n    link: \"https://react.dev/\",\r\n    alt: \"React JS\",\r\n  },\r\n  {\r\n    path: require(\"./assets/reacticons.png\"),\r\n    link: \"https://react-icons.github.io/react-icons\",\r\n    alt: \"React Icons\",\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Box, Stack, Typography, Paper, Button } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { logout } from \"../../storage/authReducers\";\r\nimport { ads } from \"../../ads\";\r\n\r\nconst RightPanel = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout(navigate));\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      sx={{\r\n        width: \"22%\",\r\n        padding: \"3rem\",\r\n        display: { xs: \"none\", sm: \"none\", md: \"none\", lg: \"block\" },\r\n      }}\r\n      elevation={3}\r\n      component={Paper}\r\n    >\r\n      <Box>\r\n        <Typography variant=\"h4\" color=\"primary\">\r\n          Sponsered\r\n        </Typography>\r\n        <hr style={{ margin: \"1rem 0\" }} />\r\n        {ads.map((ad) => (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n            key={ad.alt}\r\n          >\r\n            <a href={ad.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img\r\n                src={ad.path}\r\n                alt={ad.alt}\r\n                style={{\r\n                  marginBottom: \"2rem\",\r\n                  objectFit: \"cover\",\r\n                  cursor: \"pointer\",\r\n                  borderRadius: \"10%\",\r\n                  imageRendering: [\r\n                    \"-webkit-optimize-contrast\",\r\n                    \"crisp-edges\",\r\n                    \"pixelated\",\r\n                  ],\r\n                }}\r\n                width=\"100%\"\r\n                height=\"200px\"\r\n              />\r\n            </a>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button\r\n          onClick={onLogout}\r\n          sx={{ display: \"flex\", alignItems: \"center\", margin: \"1rem 0\" }}\r\n        >\r\n          <FiLogOut size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n          <Typography>Logout</Typography>\r\n        </Button>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default RightPanel;\r\n","import React from \"react\";\r\nimport { Send as SendIcon } from \"@mui/icons-material\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst TextInput = ({ sendMessage, message, setMessage }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      setMessage(\"\");\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.wrapForm} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          id=\"standard-text\"\r\n          label=\"Chat here...\"\r\n          value={message}\r\n          className={classes.wrapText}\r\n          onChange={(event) => setMessage(event.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            setMessage(\"\");\r\n            sendMessage();\r\n          }}\r\n        >\r\n          <SendIcon />\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  wrapForm: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"95%\",\r\n    margin: `0.5rem auto`,\r\n  },\r\n  wrapText: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    //margin: theme.spacing(1),\r\n  },\r\n}));\r\n","import { createStyles, makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Typography } from \"@mui/material\";\r\nimport { deepOrange } from \"@mui/material/colors\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  messageRow: {\r\n    display: \"flex\",\r\n  },\r\n  messageRowRight: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  messageBlue: {\r\n    position: \"relative\",\r\n    marginLeft: \"20px\",\r\n    marginBottom: \"10px\",\r\n    padding: \"1rem\",\r\n    backgroundColor: \"#A8DDFD\",\r\n    width: \"200%\",\r\n    //height: \"50px\",\r\n    textAlign: \"left\",\r\n    font: \"400 .9em 'Open Sans', sans-serif\",\r\n    border: \"1px solid #97C6E3\",\r\n    borderRadius: \"10px\",\r\n    \"&:after\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderTop: \"15px solid #A8DDFD\",\r\n      borderLeft: \"15px solid transparent\",\r\n      borderRight: \"15px solid transparent\",\r\n      top: \"0\",\r\n      left: \"-15px\",\r\n    },\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderTop: \"17px solid #97C6E3\",\r\n      borderLeft: \"16px solid transparent\",\r\n      borderRight: \"16px solid transparent\",\r\n      top: \"-1px\",\r\n      left: \"-17px\",\r\n    },\r\n  },\r\n  messageOrange: {\r\n    position: \"relative\",\r\n    marginRight: \"20px\",\r\n    marginBottom: \"10px\",\r\n    padding: \"10px\",\r\n    backgroundColor: \"#f8e896\",\r\n    width: \"60%\",\r\n    //height: \"50px\",\r\n    textAlign: \"left\",\r\n    font: \"400 .9em 'Open Sans', sans-serif\",\r\n    border: \"1px solid #dfd087\",\r\n    borderRadius: \"10px\",\r\n    \"&:after\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderTop: \"15px solid #f8e896\",\r\n      borderLeft: \"15px solid transparent\",\r\n      borderRight: \"15px solid transparent\",\r\n      top: \"0\",\r\n      right: \"-15px\",\r\n    },\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderTop: \"17px solid #dfd087\",\r\n      borderLeft: \"16px solid transparent\",\r\n      borderRight: \"16px solid transparent\",\r\n      top: \"-1px\",\r\n      right: \"-17px\",\r\n    },\r\n  },\r\n\r\n  messageContent: {\r\n    padding: \"5px\",\r\n    margin: 0,\r\n    wordWrap: \"break-word\",\r\n  },\r\n  messageTimeStampRight: {\r\n    position: \"absolute\",\r\n    fontSize: \".85em\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"10px\",\r\n    bottom: \"0\",\r\n    right: \"5px\",\r\n  },\r\n\r\n  orange: {\r\n    color: \"orange\",\r\n    backgroundColor: deepOrange[500],\r\n    width: \"1rem\",\r\n    height: \"1rem\",\r\n  },\r\n  avatarNothing: {\r\n    color: \"transparent\",\r\n    backgroundColor: \"transparent\",\r\n    width: \"1rem\",\r\n    height: \"1rem\",\r\n  },\r\n  displayName: {\r\n    marginLeft: \"20px\",\r\n  },\r\n}));\r\n\r\nfunction formatTimestamp(timestamp) {\r\n  const date = new Date(Date.parse(timestamp));\r\n  const options = {\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: false,\r\n  };\r\n  const formattedDate = date.toLocaleString(undefined, options);\r\n  return formattedDate;\r\n}\r\n\r\nexport const MessageLeft = (props) => {\r\n  const message = props.message ? props.message : \"no message\";\r\n  const timestamp = props.timestamp ? formatTimestamp(props.timestamp) : \"\";\r\n  console.log(\r\n    formatTimestamp(props.timestamp) + \"    LAOSLD   \" + props.timestamp\r\n  );\r\n  // const photoURL = props.photoURL ? props.photoURL : \"dummy.js\";\r\n  // const displayName = props.displayName ? props.displayName : \"Hamada\";\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.messageRow}>\r\n        {/* <Avatar\r\n          alt={displayName}\r\n          className={classes.orange}\r\n          src={photoURL}\r\n        ></Avatar> */}\r\n        <div>\r\n          {/* <div className={classes.displayName}>{displayName}</div> */}\r\n          <div className={classes.messageBlue}>\r\n            <div>\r\n              <p className={classes.messageContent}>{message}</p>\r\n            </div>\r\n            <div className={classes.messageTimeStampRight}>{timestamp}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n//avatar\r\nexport const MessageRight = (props) => {\r\n  const classes = useStyles();\r\n  const message = props.message ? props.message : \"no message\";\r\n  const timestamp = props.timestamp ? formatTimestamp(props.timestamp) : \"\";\r\n  return (\r\n    <div className={classes.messageRowRight}>\r\n      <div className={classes.messageOrange}>\r\n        <p className={classes.messageContent}>{message}</p>\r\n        <div className={classes.messageTimeStampRight}>{timestamp}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\nimport TextInput from \"./TextInput.js\";\r\nimport { MessageLeft, MessageRight } from \"./ChatMessage\";\r\nimport { Box, Paper, Typography } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from \"@material-ui/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport api from \"../../api/api.js\";\r\n\r\nconst ChatUi = ({ selectedFriend, socket }) => {\r\n  const classes = useStyles();\r\n  const user = useSelector((state) => state.user);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const containerRef = useRef(null);\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await api.get(\r\n          `/messages/${user._id}/${selectedFriend.friendId}`,\r\n          {\r\n            params: {\r\n              page: currentPage,\r\n              limit: 10,\r\n            },\r\n          }\r\n        );\r\n        setMessages((prevMessages) => [\r\n          ...response.data.messages,\r\n          ...prevMessages,\r\n        ]);\r\n\r\n        // console.log(response.data);\r\n        setTotalPages(response.data.totalPages);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch messages:\", error.response.data.error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [user._id, selectedFriend.friendId, currentPage]);\r\n\r\n  const handleScroll = () => {\r\n    const container = containerRef.current;\r\n    if (container.scrollTop === 0 && currentPage < totalPages) {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const container = containerRef.current;\r\n    container.scrollTop = container.scrollHeight;\r\n  }, [messages]);\r\n\r\n  const sendMessage = async () => {\r\n    const chatMessage = {\r\n      sender: { username: user.username, userId: user._id },\r\n      receiver: {\r\n        username: selectedFriend.friendName,\r\n        userId: selectedFriend.friendId,\r\n      },\r\n      content: message,\r\n      timestamp: new Date(Date.now()),\r\n    };\r\n    try {\r\n      const response = await api.post(\"/messages\", chatMessage);\r\n      // console.log(\"Message sent:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to send message:\", error.response.data.error);\r\n    }\r\n    // // Emit 'chat message' event to the server\r\n    scrollToBottom();\r\n    socket.emit(\"chat message\", chatMessage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"chat message\", (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n  }, [socket]);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Box className={classes.paper}>\r\n        <Typography>{`Chat with ${selectedFriend.friendName}`}</Typography>\r\n        <div\r\n          id=\"style-1\"\r\n          ref={containerRef}\r\n          onScroll={handleScroll}\r\n          className={classes.messagesBody}\r\n        >\r\n          <Paper>\r\n            {messages.map((message, index) =>\r\n              message.sender.userId === user._id ? (\r\n                <MessageRight\r\n                  key={message.message + \"-\" + index}\r\n                  message={message.content}\r\n                  timestamp={message.timestamp}\r\n                />\r\n              ) : (\r\n                <MessageLeft\r\n                  key={message.message + \"-\" + index}\r\n                  message={message.content}\r\n                  timestamp={message.timestamp}\r\n                />\r\n              )\r\n            )}\r\n            <div ref={messagesEndRef} /> {/* Scroll to this element */}\r\n          </Paper>\r\n        </div>\r\n        <TextInput\r\n          sendMessage={sendMessage}\r\n          message={message}\r\n          setMessage={setMessage}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    paper: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n      position: \"relative\",\r\n      padding: \"1rem\",\r\n    },\r\n    paper2: {\r\n      padding: \"10px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n      position: \"relative\",\r\n    },\r\n    container: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: \"1rem\",\r\n    },\r\n    messagesBody: {\r\n      width: \"calc( 100% - 20px )\",\r\n      margin: 10,\r\n      overflowY: \"scroll\",\r\n      height: \"calc( 100% - 80px )\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default ChatUi;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { io } from \"socket.io-client\";\r\nimport ChatUi from \"../Chat/ChatUi\";\r\n\r\nconst ChatWindow = ({ setShowChatWindow, socket }) => {\r\n  const user = useSelector((state) => state.user);\r\n  const [selectedFriend, setSelectedFriend] = useState(null);\r\n\r\n  const handleFriendClick = (friend) => {\r\n    // Special room key\r\n    const ids = [user._id, friend.friendId].sort();\r\n    const roomKeyById = ids.join(\"_\");\r\n\r\n    socket.emit(\"join_room\", roomKeyById);\r\n    setSelectedFriend(friend);\r\n  };\r\n\r\n  const handleCloseChat = () => {\r\n    setSelectedFriend(null);\r\n    setShowChatWindow(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          position: \"fixed\",\r\n          bottom: { xs: \"0\", lg: \"1rem\" },\r\n          right: { xs: \"0\", lg: \"1rem\" },\r\n          zIndex: 9999,\r\n          background: \"#fff\",\r\n          width: { xs: \"100%\", lg: \"800px\" },\r\n          height: { xs: \"70%\", lg: \"600px\" },\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.2)\",\r\n          padding: \"6px\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"0.5rem\",\r\n            right: \"0.5rem\",\r\n          }}\r\n          onClick={handleCloseChat}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            height: \"calc(100% - 48px)\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: \"40%\",\r\n              borderRight: \"1px solid #ccc\",\r\n              padding: \"0 1rem\",\r\n              overflow: \"auto\",\r\n              display: selectedFriend ? { xs: \"none\", sm: \"block\" } : \"block\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\">Friends</Typography>\r\n            <List>\r\n              {user.friends.map((friend) => (\r\n                <ListItem\r\n                  key={friend.friendName}\r\n                  button\r\n                  onClick={() => handleFriendClick(friend)}\r\n                  sx={{\r\n                    backgroundColor:\r\n                      selectedFriend?.friendId === friend.friendId\r\n                        ? \"#f0f0f0\"\r\n                        : \"inherit\",\r\n                  }}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      alt={friend.friendName}\r\n                      src={friend.friendProfilePicture}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={friend.friendName} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              flex: 1,\r\n              // padding: \"0 1rem\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              margin: \"0 1rem\",\r\n            }}\r\n          >\r\n            {selectedFriend ? (\r\n              <>\r\n                <ChatUi selectedFriend={selectedFriend} socket={socket} />\r\n              </>\r\n            ) : (\r\n              <Typography\r\n                variant=\"body1\"\r\n                sx={{ textAlign: \"center\", marginTop: \"40%\" }}\r\n              >\r\n                Select a friend to start chatting\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { constants } from \"../../constants\";\r\nimport { getToken } from \"../../storage/authStorage\";\r\nimport Navbar from \"../organisms/Navbar/NavBar\";\r\nimport Footer from \"../organisms/Footer/Footer\";\r\nimport AllPosts from \"../organisms/AllPosts\";\r\nimport SearchBar from \"../organisms/SearchBar\";\r\nimport LeftPanel from \"../organisms/LeftPanel\";\r\nimport RightPanel from \"../organisms/RightPanel\";\r\nimport LoadingCircle from \"../atoms/LoadingCircle\";\r\nimport { LoadingScreen } from \"../atoms/LoadingScreen\";\r\nimport background from \"../../assets/background.jpeg\";\r\nimport { Box, Fab } from \"@mui/material\";\r\nimport ChatIcon from \"@mui/icons-material/Chat\";\r\nimport { fetchUser } from \"../../utils/fetchUser\";\r\nimport ChatWindow from \"../molecules/ChatWindow\";\r\nimport { io } from \"socket.io-client\";\r\n\r\n// const socket = io.connect(\"http://localhost:4000\");\r\nconst socket = io.connect(\"https://social-media-app-server-o938.onrender.com\");\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n  const loading = useSelector((state) => state.loading);\r\n  const [showChatWindow, setShowChatWindow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    !getToken() && navigate(`${constants.BASE_URL}/${constants.SIGN_IN}`);\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      fetchUser(navigate);\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  if (!user) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  const handleChatIconClick = () => {\r\n    setShowChatWindow(!showChatWindow);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {loading && <LoadingCircle />}\r\n      <SearchBar />\r\n      <hr style={{ margin: \"2rem 0\" }} />\r\n\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <LeftPanel />\r\n        <AllPosts />\r\n        <RightPanel />\r\n      </Box>\r\n\r\n      {showChatWindow ? (\r\n        <ChatWindow setShowChatWindow={setShowChatWindow} socket={socket} />\r\n      ) : (\r\n        <Fab\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={handleChatIconClick}\r\n          sx={{\r\n            position: \"fixed\",\r\n            bottom: \"2rem\",\r\n            right: \"2rem\",\r\n            zIndex: 9999,\r\n          }}\r\n        >\r\n          <ChatIcon />\r\n        </Fab>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["postSchema","yup","shape","body","required","min","hashtags","of","max","_ref","name","control","label","props","_objectWithoutProperties","_excluded","_jsx","Controller","render","_ref2","_ref2$field","field","onChange","onBlur","value","ref","fieldState","error","formState","_jsxs","_Fragment","children","TagsInput","_objectSpread","id","inputRef","placeHolder","Box","sx","textAlign","onSubmit","handleSubmit","loading","useSelector","state","Grid","container","component","display","justifyContent","alignItems","item","xs","sm","md","Paper","elevation","square","my","mx","flexDirection","Typography","variant","noValidate","mt","Button","type","fullWidth","mb","disabled","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","posts","setPosts","_useState5","_useState6","users","setUsers","_useState7","_useState8","searchTerm","setSearchTerm","_useState9","_useState10","showOverlay","setShowOverlay","toggleOverlay","prev","navigate","useNavigate","useEffect","delay","setTimeout","clearTimeout","handleSearch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_response$data","_users","_posts","wrap","_context","next","abrupt","api","concat","sent","data","t0","console","stop","apply","arguments","margin","TextField","onKeyPress","event","key","preventDefault","e","target","InputProps","startAdornment","InputAdornment","position","AiOutlineSearch","width","lg","length","padding","border","color","background","map","user","onClick","constants","_id","borderTop","ProfilePictureUpload","profile","size","noMargin","username","post","PostOverlay","onClose","postUser","profilePicture","displayedFriends","setDisplayedFriends","friends","slice","Stack","marginBottom","marginLeft","textTransform","Link","to","style","textDecoration","CgProfile","BiPlus","FaUserFriends","friend","index","friendId","friendName","IconButton","ads","path","require","link","alt","dispatch","useDispatch","ad","href","rel","src","objectFit","cursor","borderRadius","imageRendering","height","logout","FiLogOut","sendMessage","message","setMessage","classes","useStyles","className","wrapForm","autoComplete","wrapText","button","SendIcon","makeStyles","messageRow","messageRowRight","messageBlue","backgroundColor","font","content","borderLeft","borderRight","top","left","messageOrange","marginRight","right","messageContent","wordWrap","messageTimeStampRight","fontSize","fontWeight","marginTop","bottom","orange","deepOrange","avatarNothing","displayName","formatTimestamp","timestamp","Date","parse","toLocaleString","undefined","month","day","hour","minute","hour12","MessageLeft","log","MessageRight","theme","createStyles","paper","paper2","messagesBody","overflowY","selectedFriend","socket","messages","setMessages","currentPage","setCurrentPage","totalPages","setTotalPages","containerRef","useRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchMessages","params","page","limit","prevMessages","_toConsumableArray","useLayoutEffect","scrollTop","scrollHeight","_ref3","_callee2","chatMessage","_context2","sender","userId","receiver","now","emit","on","onScroll","prevPage","TextInput","setShowChatWindow","setSelectedFriend","zIndex","boxShadow","CloseIcon","overflow","List","ListItem","roomKeyById","sort","join","handleFriendClick","ListItemAvatar","Avatar","friendProfilePicture","ListItemText","primary","flex","ChatUi","io","showChatWindow","getToken","fetchUser","LoadingScreen","Navbar","LoadingCircle","SearchBar","LeftPanel","AllPosts","RightPanel","ChatWindow","Fab","ChatIcon","Footer"],"sourceRoot":""}