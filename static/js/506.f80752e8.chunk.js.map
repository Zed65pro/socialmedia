{"version":3,"file":"static/js/506.f80752e8.chunk.js","mappings":"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","sources":["components/organisms/SearchBar.jsx","components/organisms/LeftPanel.jsx","ads.js","components/organisms/RightPanel.jsx","components/Chat/TextInput.js","components/Chat/ChatMessage.js","components/Chat/ChatUi.js","components/molecules/ChatWindow.jsx","components/templates/ChatTemplate.jsx","components/pages/Home.jsx"],"sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  InputAdornment,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../../api/api\";\r\nimport { constants } from \"../../constants\";\r\nimport PostOverlay from \"../molecules/PostOverlay\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\n\r\nconst SearchBar = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n  const toggleOverlay = () => {\r\n    setShowOverlay((prev) => !prev);\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const delay = setTimeout(() => {\r\n      setSearchTerm(search);\r\n    }, 300); // Adjust the delay as needed (in milliseconds)\r\n\r\n    return () => {\r\n      clearTimeout(delay);\r\n    };\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    const handleSearch = async () => {\r\n      if (!searchTerm) {\r\n        setPosts([]);\r\n        setUsers([]);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await api.get(`/search/${searchTerm}`);\r\n        const { users, posts } = response.data;\r\n        setPosts(posts);\r\n        setUsers(users);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    handleSearch();\r\n  }, [searchTerm]);\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"1rem\",\r\n      }}\r\n    >\r\n      <TextField\r\n        id=\"search\"\r\n        variant=\"outlined\"\r\n        name=\"search\"\r\n        label=\"Search ..\"\r\n        onKeyPress={handleKeyPress}\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AiOutlineSearch />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        sx={{ width: { xs: \"90%\", sm: \"60%\", md: \"50%\", lg: \"20%\" } }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          width: { xs: \"90%\", sm: \"60%\", md: \"50%\", lg: \"20%\" },\r\n        }}\r\n      >\r\n        {users.length > 0 && (\r\n          <Box>\r\n            <Box\r\n              sx={{\r\n                width: \"100%\",\r\n                padding: \"15px\",\r\n                border: \"black 1px solid\",\r\n                color: \"white\",\r\n                background:\r\n                  \"linear-gradient(90deg, rgba(20, 163, 214, 0.91) 15%, rgba(0,0,0,1) 85%)\",\r\n              }}\r\n            >\r\n              <Typography>Users</Typography>\r\n            </Box>\r\n            <Box sx={{ textAlign: \"center\" }}>\r\n              {users.map((user) => (\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"filled\"\r\n                  color=\"primary\"\r\n                  onClick={() =>\r\n                    navigate(\r\n                      `${constants.BASE_URL}/${constants.USER}/${user._id}`\r\n                    )\r\n                  }\r\n                  key={user._id}\r\n                  sx={{\r\n                    border: \"solid black 1px\",\r\n                    borderTop: \"none\",\r\n                    padding: \"15px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"start\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <ProfilePictureUpload\r\n                    profile={user}\r\n                    size=\"45\"\r\n                    noMargin\r\n                    margin=\"1\"\r\n                  />\r\n                  {user.username}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        {posts.length > 0 && (\r\n          <Box>\r\n            <Box\r\n              sx={{\r\n                width: \"100%\",\r\n                padding: \"15px\",\r\n                border: \"solid black 1px\",\r\n                borderTop: \"none\",\r\n                color: \"white\",\r\n                background:\r\n                  \"linear-gradient(90deg, rgba(20, 163, 214, 0.91) 15%, rgba(0,0,0,1) 85%)\",\r\n              }}\r\n            >\r\n              <Typography>{`Posts starting with tag \"${searchTerm}\"`}</Typography>\r\n            </Box>\r\n            <Box sx={{ textAlign: \"center\" }}>\r\n              {posts.map((post) => (\r\n                <>\r\n                  {showOverlay && (\r\n                    <PostOverlay\r\n                      onClose={toggleOverlay}\r\n                      post={post}\r\n                      postUser={post.user}\r\n                      profilePicture={post.user.profilePicture}\r\n                    />\r\n                  )}\r\n                  <Button\r\n                    onClick={toggleOverlay}\r\n                    fullWidth\r\n                    variant=\"filled\"\r\n                    color=\"primary\"\r\n                    sx={{\r\n                      border: \"solid black 1px\",\r\n                      borderTop: \"none\",\r\n                      padding: \"15px\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"start\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Typography key={post._id}>{post.body}</Typography>\r\n                  </Button>\r\n                </>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Stack,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\nimport { BiPlus } from \"react-icons/bi\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { constants } from \"../../constants\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\n// import AddPostOverlay from \"../molecules/AddPostOverlay\";\r\n\r\nconst LeftPanel = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const [displayedFriends, setDisplayedFriends] = useState(2);\r\n  const navigate = useNavigate();\r\n  const friends = user.friends.slice(0, displayedFriends);\r\n  // const [showOverlay, setShowOverlay] = useState(false);\r\n\r\n  const handleShowMoreFriends = () => {\r\n    if (displayedFriends + 2 <= user.friends.length) {\r\n      setDisplayedFriends(displayedFriends + 2);\r\n    } else {\r\n      setDisplayedFriends(user.friends.length);\r\n    }\r\n  };\r\n\r\n  // const toggleOverlay = () => {\r\n  //   setShowOverlay((prev) => !prev);\r\n  // };\r\n\r\n  return (\r\n    <Stack\r\n      sx={{\r\n        width: \"20%\",\r\n        padding: \"3rem\",\r\n        display: { xs: \"none\", sm: \"none\", md: \"none\", lg: \"block\" },\r\n      }}\r\n      elevation={3}\r\n      component={Paper}\r\n    >\r\n      {/* {showOverlay && <AddPostOverlay onClose={toggleOverlay} />} */}\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n      >\r\n        <ProfilePictureUpload size={85} profile={user} />\r\n        <Typography\r\n          variant=\"h5\"\r\n          sx={{\r\n            marginLeft: \"1rem\",\r\n            textTransform: \"capitalize\",\r\n            display: { sx: \"none\", lg: \"block\" },\r\n          }}\r\n        >\r\n          {user.username}\r\n        </Typography>\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button sx={{ margin: \"3rem 0\" }}>\r\n          <Link\r\n            to={`${constants.BASE_URL}/${constants.USER}/${user._id}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <CgProfile size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n            <Typography>Profile</Typography>\r\n          </Link>\r\n        </Button>\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button sx={{ margin: \"3rem 0\" }}>\r\n          <Link\r\n            to={`${constants.BASE_URL}/${constants.ADDPOST}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <BiPlus size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n            <Typography>Add a post</Typography>\r\n          </Link>\r\n        </Button>\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button sx={{ margin: \"3rem 0\" }}>\r\n          <Link\r\n            to={`${constants.BASE_URL}/${constants.FRIENDS}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FaUserFriends size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n            <Typography>Friends</Typography>\r\n          </Link>\r\n        </Button>\r\n        <hr />\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            // backgroundColor: \"grey\",\r\n          }}\r\n        >\r\n          {friends.map((friend, index) => (\r\n            <Button\r\n              sx={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n              color=\"success\"\r\n              onClick={() =>\r\n                navigate(\r\n                  `${constants.BASE_URL}/${constants.USER}/${friend.friendId}`\r\n                )\r\n              }\r\n              key={index}\r\n            >\r\n              <Typography>{friend.friendName}</Typography>\r\n              <hr style={{ width: \"100%\" }} />\r\n            </Button>\r\n          ))}\r\n          {displayedFriends < user.friends.length && (\r\n            <IconButton onClick={handleShowMoreFriends}>\r\n              <BiPlus />\r\n              <Typography>Show more friends</Typography>\r\n            </IconButton>\r\n          )}\r\n        </Box>\r\n        {user.friends.length <= 0 && <hr />}\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default LeftPanel;\r\n","export const ads = [\r\n  {\r\n    path: require(\"./assets/AnkaraUniv.png\"),\r\n    link: \"http://comp.eng.ankara.edu.tr/\",\r\n    alt: \"Ankara University\",\r\n  },\r\n  {\r\n    path: require(\"./assets/background/react2.webp\"),\r\n    link: \"https://react.dev/\",\r\n    alt: \"React JS\",\r\n  },\r\n  {\r\n    path: require(\"./assets/reacticons.png\"),\r\n    link: \"https://react-icons.github.io/react-icons\",\r\n    alt: \"React Icons\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Box, Stack, Typography, Paper, Button } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { logout } from \"../../storage/authReducers\";\r\nimport { ads } from \"../../ads\";\r\n\r\nconst RightPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout(navigate));\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      sx={{\r\n        width: \"22%\",\r\n        padding: \"3rem\",\r\n        display: { xs: \"none\", sm: \"none\", md: \"none\", lg: \"block\" },\r\n      }}\r\n      elevation={3}\r\n      component={Paper}\r\n    >\r\n      <Box>\r\n        <Typography variant=\"h4\" color=\"primary\">\r\n          Sponsered\r\n        </Typography>\r\n        <hr style={{ margin: \"1rem 0\" }} />\r\n        {ads.map((ad) => (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n            key={ad.alt}\r\n          >\r\n            <a href={ad.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img\r\n                src={ad.path}\r\n                alt={ad.alt}\r\n                style={{\r\n                  marginBottom: \"2rem\",\r\n                  objectFit: \"cover\",\r\n                  cursor: \"pointer\",\r\n                  borderRadius: \"10%\",\r\n                  imageRendering: [\r\n                    \"-webkit-optimize-contrast\",\r\n                    \"crisp-edges\",\r\n                    \"pixelated\",\r\n                  ],\r\n                }}\r\n                width=\"100%\"\r\n                height=\"200px\"\r\n              />\r\n            </a>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button\r\n          onClick={onLogout}\r\n          sx={{ display: \"flex\", alignItems: \"center\", margin: \"1rem 0\" }}\r\n        >\r\n          <FiLogOut size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n          <Typography>Logout</Typography>\r\n        </Button>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default RightPanel;\r\n","import React from \"react\";\r\nimport { Send as SendIcon } from \"@mui/icons-material\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst TextInput = ({ sendMessage, message, setMessage }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      setMessage(\"\");\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.wrapForm} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          id=\"standard-text\"\r\n          label=\"Chat here...\"\r\n          value={message}\r\n          className={classes.wrapText}\r\n          onChange={(event) => setMessage(event.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            setMessage(\"\");\r\n            sendMessage();\r\n          }}\r\n        >\r\n          <SendIcon />\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  wrapForm: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"95%\",\r\n    margin: `0.5rem auto`,\r\n  },\r\n  wrapText: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    //margin: theme.spacing(1),\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { deepOrange } from \"@mui/material/colors\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  messageRow: {\r\n    display: \"flex\",\r\n  },\r\n  messageRowRight: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  messageBlue: {\r\n    position: \"relative\",\r\n    marginLeft: \"20px\",\r\n    marginBottom: \"10px\",\r\n    padding: \"1rem\",\r\n    backgroundColor: \"#A8DDFD\",\r\n    width: \"200%\",\r\n    //height: \"50px\",\r\n    textAlign: \"left\",\r\n    font: \"400 .9em 'Open Sans', sans-serif\",\r\n    border: \"1px solid #97C6E3\",\r\n    borderRadius: \"10px\",\r\n    \"&:after\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderTop: \"15px solid #A8DDFD\",\r\n      borderLeft: \"15px solid transparent\",\r\n      borderRight: \"15px solid transparent\",\r\n      top: \"0\",\r\n      left: \"-15px\",\r\n    },\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderTop: \"17px solid #97C6E3\",\r\n      borderLeft: \"16px solid transparent\",\r\n      borderRight: \"16px solid transparent\",\r\n      top: \"-1px\",\r\n      left: \"-17px\",\r\n    },\r\n  },\r\n  messageOrange: {\r\n    position: \"relative\",\r\n    marginRight: \"20px\",\r\n    marginBottom: \"10px\",\r\n    padding: \"10px\",\r\n    backgroundColor: \"#f8e896\",\r\n    width: \"60%\",\r\n    //height: \"50px\",\r\n    textAlign: \"left\",\r\n    font: \"400 .9em 'Open Sans', sans-serif\",\r\n    border: \"1px solid #dfd087\",\r\n    borderRadius: \"10px\",\r\n    \"&:after\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderTop: \"15px solid #f8e896\",\r\n      borderLeft: \"15px solid transparent\",\r\n      borderRight: \"15px solid transparent\",\r\n      top: \"0\",\r\n      right: \"-15px\",\r\n    },\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderTop: \"17px solid #dfd087\",\r\n      borderLeft: \"16px solid transparent\",\r\n      borderRight: \"16px solid transparent\",\r\n      top: \"-1px\",\r\n      right: \"-17px\",\r\n    },\r\n  },\r\n\r\n  messageContent: {\r\n    padding: \"5px\",\r\n    margin: 0,\r\n    wordWrap: \"break-word\",\r\n  },\r\n  messageTimeStampRight: {\r\n    position: \"absolute\",\r\n    fontSize: \".85em\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"10px\",\r\n    bottom: \"0\",\r\n    right: \"5px\",\r\n  },\r\n\r\n  orange: {\r\n    color: \"orange\",\r\n    backgroundColor: deepOrange[500],\r\n    width: \"1rem\",\r\n    height: \"1rem\",\r\n  },\r\n  avatarNothing: {\r\n    color: \"transparent\",\r\n    backgroundColor: \"transparent\",\r\n    width: \"1rem\",\r\n    height: \"1rem\",\r\n  },\r\n  displayName: {\r\n    marginLeft: \"20px\",\r\n  },\r\n}));\r\n\r\nfunction formatTimestamp(timestamp) {\r\n  const date = new Date(Date.parse(timestamp));\r\n  const options = {\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: false,\r\n  };\r\n  const formattedDate = date.toLocaleString(undefined, options);\r\n  return formattedDate;\r\n}\r\n\r\nexport const MessageLeft = (props) => {\r\n  const message = props.message ? props.message : \"no message\";\r\n  const timestamp = props.timestamp ? formatTimestamp(props.timestamp) : \"\";\r\n  console.log(\r\n    formatTimestamp(props.timestamp) + \"    LAOSLD   \" + props.timestamp\r\n  );\r\n  // const photoURL = props.photoURL ? props.photoURL : \"dummy.js\";\r\n  // const displayName = props.displayName ? props.displayName : \"Hamada\";\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.messageRow}>\r\n        {/* <Avatar\r\n          alt={displayName}\r\n          className={classes.orange}\r\n          src={photoURL}\r\n        ></Avatar> */}\r\n        <div>\r\n          {/* <div className={classes.displayName}>{displayName}</div> */}\r\n          <div className={classes.messageBlue}>\r\n            <div>\r\n              <p className={classes.messageContent}>{message}</p>\r\n            </div>\r\n            <div className={classes.messageTimeStampRight}>{timestamp}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n//avatar\r\nexport const MessageRight = (props) => {\r\n  const classes = useStyles();\r\n  const message = props.message ? props.message : \"no message\";\r\n  const timestamp = props.timestamp ? formatTimestamp(props.timestamp) : \"\";\r\n  return (\r\n    <div className={classes.messageRowRight}>\r\n      <div className={classes.messageOrange}>\r\n        <p className={classes.messageContent}>{message}</p>\r\n        <div className={classes.messageTimeStampRight}>{timestamp}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\nimport TextInput from \"./TextInput.js\";\r\nimport { MessageLeft, MessageRight } from \"./ChatMessage\";\r\nimport { Box, Paper, Typography } from \"@mui/material\";\r\nimport { createStyles, makeStyles } from \"@material-ui/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport api from \"../../api/api.js\";\r\n\r\nconst ChatUi = ({ selectedFriend, socket }) => {\r\n  const classes = useStyles();\r\n  const user = useSelector((state) => state.user);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const containerRef = useRef(null);\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await api.get(\r\n          `/messages/${user._id}/${selectedFriend.friendId}`,\r\n          {\r\n            params: {\r\n              page: currentPage,\r\n              limit: 10,\r\n            },\r\n          }\r\n        );\r\n        setMessages((prevMessages) => [\r\n          ...response.data.messages,\r\n          ...prevMessages,\r\n        ]);\r\n\r\n        // console.log(response.data);\r\n        setTotalPages(response.data.totalPages);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch messages:\", error.response.data.error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [user._id, selectedFriend.friendId, currentPage]);\r\n\r\n  const handleScroll = () => {\r\n    const container = containerRef.current;\r\n    if (container.scrollTop === 0 && currentPage < totalPages) {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const container = containerRef.current;\r\n    container.scrollTop = container.scrollHeight;\r\n  }, [messages]);\r\n\r\n  const sendMessage = async () => {\r\n    const chatMessage = {\r\n      sender: { username: user.username, userId: user._id },\r\n      receiver: {\r\n        username: selectedFriend.friendName,\r\n        userId: selectedFriend.friendId,\r\n      },\r\n      content: message,\r\n      timestamp: new Date(Date.now()),\r\n    };\r\n    try {\r\n      await api.post(\"/messages\", chatMessage);\r\n      // console.log(\"Message sent:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to send message:\", error.response.data.error);\r\n    }\r\n    // // Emit 'chat message' event to the server\r\n    scrollToBottom();\r\n    socket.emit(\"chat message\", chatMessage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"chat message\", (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n  }, [socket]);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Box className={classes.paper}>\r\n        <Typography>{`Chat with ${selectedFriend.friendName}`}</Typography>\r\n        <div\r\n          id=\"style-1\"\r\n          ref={containerRef}\r\n          onScroll={handleScroll}\r\n          className={classes.messagesBody}\r\n        >\r\n          <Paper>\r\n            {messages.map((message, index) =>\r\n              message.sender.userId === user._id ? (\r\n                <MessageRight\r\n                  key={message.message + \"-\" + index}\r\n                  message={message.content}\r\n                  timestamp={message.timestamp}\r\n                />\r\n              ) : (\r\n                <MessageLeft\r\n                  key={message.message + \"-\" + index}\r\n                  message={message.content}\r\n                  timestamp={message.timestamp}\r\n                />\r\n              )\r\n            )}\r\n            <div ref={messagesEndRef} /> {/* Scroll to this element */}\r\n          </Paper>\r\n        </div>\r\n        <TextInput\r\n          sendMessage={sendMessage}\r\n          message={message}\r\n          setMessage={setMessage}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    paper: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n      position: \"relative\",\r\n      padding: \"1rem\",\r\n    },\r\n    paper2: {\r\n      padding: \"10px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n      position: \"relative\",\r\n    },\r\n    container: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: \"1rem\",\r\n    },\r\n    messagesBody: {\r\n      width: \"calc( 100% - 20px )\",\r\n      margin: 10,\r\n      overflowY: \"scroll\",\r\n      height: \"calc( 100% - 80px )\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default ChatUi;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport ChatUi from \"../Chat/ChatUi\";\r\n\r\nconst ChatWindow = ({ setShowChatWindow, socket }) => {\r\n  const user = useSelector((state) => state.user);\r\n  const [selectedFriend, setSelectedFriend] = useState(null);\r\n\r\n  const handleFriendClick = (friend) => {\r\n    // Special room key\r\n    const ids = [user._id, friend.friendId].sort();\r\n    const roomKeyById = ids.join(\"_\");\r\n\r\n    socket.emit(\"join_room\", roomKeyById);\r\n    setSelectedFriend(friend);\r\n  };\r\n\r\n  const handleCloseChat = () => {\r\n    setSelectedFriend(null);\r\n    setShowChatWindow(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          position: \"fixed\",\r\n          bottom: { xs: \"0\", lg: \"1rem\" },\r\n          right: { xs: \"0\", lg: \"1rem\" },\r\n          zIndex: 9999,\r\n          background: \"#fff\",\r\n          width: { xs: \"100%\", lg: \"800px\" },\r\n          height: { xs: \"70%\", lg: \"600px\" },\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.2)\",\r\n          padding: \"6px\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"0.5rem\",\r\n            right: \"0.5rem\",\r\n          }}\r\n          onClick={handleCloseChat}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            height: \"calc(100% - 48px)\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: \"40%\",\r\n              borderRight: \"1px solid #ccc\",\r\n              padding: \"0 1rem\",\r\n              overflow: \"auto\",\r\n              display: selectedFriend ? { xs: \"none\", sm: \"block\" } : \"block\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\">Friends</Typography>\r\n            <List>\r\n              {user.friends.map((friend) => (\r\n                <ListItem\r\n                  key={friend.friendName}\r\n                  button\r\n                  onClick={() => handleFriendClick(friend)}\r\n                  sx={{\r\n                    backgroundColor:\r\n                      selectedFriend?.friendId === friend.friendId\r\n                        ? \"#f0f0f0\"\r\n                        : \"inherit\",\r\n                  }}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      alt={friend.friendName}\r\n                      src={friend.friendProfilePicture}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={friend.friendName} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              flex: 1,\r\n              // padding: \"0 1rem\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              margin: \"0 1rem\",\r\n            }}\r\n          >\r\n            {selectedFriend ? (\r\n              <>\r\n                <ChatUi selectedFriend={selectedFriend} socket={socket} />\r\n              </>\r\n            ) : (\r\n              <Typography\r\n                variant=\"body1\"\r\n                sx={{ textAlign: \"center\", marginTop: \"40%\" }}\r\n              >\r\n                Select a friend to start chatting\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import { Fab } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport ChatWindow from \"../molecules/ChatWindow\";\r\nimport ChatIcon from \"@mui/icons-material/Chat\";\r\n\r\nconst socket = io.connect(process.env.REACT_APP_API);\r\n\r\nconst ChatTemplate = () => {\r\n  const [showChatWindow, setShowChatWindow] = useState(false);\r\n\r\n  const handleChatIconClick = () => {\r\n    setShowChatWindow(!showChatWindow);\r\n  };\r\n  return (\r\n    <>\r\n      {showChatWindow ? (\r\n        <ChatWindow setShowChatWindow={setShowChatWindow} socket={socket} />\r\n      ) : (\r\n        <Fab\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={handleChatIconClick}\r\n          sx={{\r\n            position: \"fixed\",\r\n            bottom: \"2rem\",\r\n            right: \"2rem\",\r\n            zIndex: 9999,\r\n          }}\r\n        >\r\n          <ChatIcon />\r\n        </Fab>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatTemplate;\r\n","import React from \"react\";\r\nimport Navbar from \"../organisms/Navbar/NavBar\";\r\nimport AllPosts from \"../organisms/AllPosts\";\r\nimport SearchBar from \"../organisms/SearchBar\";\r\nimport LeftPanel from \"../organisms/LeftPanel\";\r\nimport RightPanel from \"../organisms/RightPanel\";\r\nimport ChatTemplate from \"../templates/ChatTemplate\";\r\nimport ProtectedPage from \"./ProtectedPage\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <ProtectedPage>\r\n      <ChatTemplate />\r\n      <Navbar />\r\n      <SearchBar />\r\n      <hr style={{ margin: \"2rem 0\" }} />\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <LeftPanel />\r\n        <AllPosts />\r\n        <RightPanel />\r\n      </Box>\r\n    </ProtectedPage>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","posts","setPosts","_useState5","_useState6","users","setUsers","_useState7","_useState8","searchTerm","setSearchTerm","_useState9","_useState10","showOverlay","setShowOverlay","toggleOverlay","prev","navigate","useNavigate","useEffect","delay","setTimeout","clearTimeout","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_response$data","_users","_posts","wrap","_context","next","abrupt","api","concat","sent","data","t0","console","error","stop","apply","arguments","_jsxs","Box","sx","display","flexDirection","justifyContent","alignItems","margin","children","_jsx","TextField","id","variant","name","label","onKeyPress","event","key","preventDefault","value","onChange","e","target","InputProps","startAdornment","InputAdornment","position","AiOutlineSearch","width","xs","sm","md","lg","length","padding","border","color","background","Typography","textAlign","map","user","Button","fullWidth","onClick","constants","_id","borderTop","ProfilePictureUpload","profile","size","noMargin","username","post","_Fragment","PostOverlay","onClose","postUser","profilePicture","body","useSelector","state","displayedFriends","setDisplayedFriends","friends","slice","Stack","elevation","component","Paper","marginBottom","marginLeft","textTransform","Link","to","style","textDecoration","CgProfile","BiPlus","FaUserFriends","friend","index","friendId","friendName","IconButton","ads","path","require","link","alt","dispatch","useDispatch","ad","href","rel","src","objectFit","cursor","borderRadius","imageRendering","height","logout","FiLogOut","sendMessage","message","setMessage","classes","useStyles","className","wrapForm","noValidate","autoComplete","wrapText","button","SendIcon","makeStyles","messageRow","messageRowRight","messageBlue","backgroundColor","font","content","borderLeft","borderRight","top","left","messageOrange","marginRight","right","messageContent","wordWrap","messageTimeStampRight","fontSize","fontWeight","marginTop","bottom","orange","deepOrange","avatarNothing","displayName","formatTimestamp","timestamp","Date","parse","toLocaleString","undefined","month","day","hour","minute","hour12","MessageLeft","props","log","MessageRight","theme","createStyles","paper","paper2","container","messagesBody","overflowY","selectedFriend","socket","messages","setMessages","currentPage","setCurrentPage","totalPages","setTotalPages","containerRef","useRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchMessages","_ref2","params","page","limit","prevMessages","_toConsumableArray","useLayoutEffect","scrollTop","scrollHeight","_ref3","_callee2","chatMessage","_context2","sender","userId","receiver","now","emit","on","ref","onScroll","prevPage","TextInput","setShowChatWindow","setSelectedFriend","zIndex","boxShadow","CloseIcon","overflow","List","ListItem","roomKeyById","sort","join","handleFriendClick","ListItemAvatar","Avatar","friendProfilePicture","ListItemText","primary","flex","ChatUi","io","process","showChatWindow","ChatWindow","Fab","ChatIcon","ProtectedPage","ChatTemplate","Navbar","SearchBar","LeftPanel","AllPosts","RightPanel"],"sourceRoot":""}