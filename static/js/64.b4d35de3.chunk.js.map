{"version":3,"file":"static/js/64.b4d35de3.chunk.js","mappings":"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","sources":["Schemas/postSchema.js","components/atoms/FormInputHashtag.jsx","components/organisms/CreatePost.jsx","components/organisms/SearchBar.jsx","components/organisms/LeftPanel.jsx","ads.js","components/organisms/RightPanel.jsx","components/molecules/ChatWindow.jsx","components/pages/Home.jsx"],"sourcesContent":["import * as yup from \"yup\";\r\n\r\nexport const postSchema = yup.object().shape({\r\n  body: yup\r\n    .string(\"body must be a string\")\r\n    .required(\"This field can't be empty\")\r\n    .min(1, \"Must be at least 1 character.\"),\r\n  hashtags: yup\r\n    .array()\r\n    .of(\r\n      yup\r\n        .string(\"Hashtag must be a string\")\r\n        .min(1, \"Must be at least 1 character.\")\r\n        .max(15, \"Must be a maximum of 15 characters\")\r\n    )\r\n    .required(\"This field can't be empty\"),\r\n});\r\n","import { Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { TagsInput } from \"react-tag-input-component\";\r\n\r\nconst FormInputText = ({ name, control, label, ...props }) => {\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({\r\n        field: { onChange, onBlur, value, ref },\r\n        fieldState: { error },\r\n        formState,\r\n      }) => (\r\n        <>\r\n          <TagsInput\r\n            value={value}\r\n            id={name}\r\n            name={name}\r\n            onBlur={onBlur}\r\n            inputRef={ref}\r\n            placeHolder={label}\r\n            onChange={onChange}\r\n            {...props}\r\n          />\r\n          <Box sx={{ textAlign: \"center\" }}>\r\n            <span>Press enter to add hashtag..</span>\r\n          </Box>\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormInputText;\r\n","import { Box, Button, Grid, Paper, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CreatePost = ({ children, onSubmit, handleSubmit }) => {\r\n  const loading = useSelector((state) => state.loading);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      component=\"main\"\r\n      sx={{\r\n        // height: \"50vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Grid item xs={10} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <Box\r\n          sx={{\r\n            my: 8,\r\n            mx: 4,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Create your own post!\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            sx={{ mt: 1 }}\r\n          >\r\n            {children}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              disabled={loading}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import {\r\n  Box,\r\n  Button,\r\n  InputAdornment,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../../api/api\";\r\nimport { constants } from \"../../constants\";\r\nimport PostOverlay from \"../molecules/PostOverlay\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\n\r\nconst SearchBar = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n  const toggleOverlay = () => {\r\n    setShowOverlay((prev) => !prev);\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const delay = setTimeout(() => {\r\n      setSearchTerm(search);\r\n    }, 300); // Adjust the delay as needed (in milliseconds)\r\n\r\n    return () => {\r\n      clearTimeout(delay);\r\n    };\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    const handleSearch = async () => {\r\n      if (!searchTerm) {\r\n        setPosts([]);\r\n        setUsers([]);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await api.get(`/search/${searchTerm}`);\r\n        const { users, posts } = response.data;\r\n        setPosts(posts);\r\n        setUsers(users);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    handleSearch();\r\n  }, [searchTerm]);\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"1rem\",\r\n      }}\r\n    >\r\n      <TextField\r\n        id=\"search\"\r\n        variant=\"outlined\"\r\n        name=\"search\"\r\n        label=\"Search ..\"\r\n        onKeyPress={handleKeyPress}\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AiOutlineSearch />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        sx={{ width: { xs: \"90%\", sm: \"60%\", md: \"50%\", lg: \"20%\" } }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          width: { xs: \"90%\", sm: \"60%\", md: \"50%\", lg: \"20%\" },\r\n        }}\r\n      >\r\n        {users.length > 0 && (\r\n          <Box>\r\n            <Box\r\n              sx={{\r\n                width: \"100%\",\r\n                padding: \"15px\",\r\n                border: \"black 1px solid\",\r\n                color: \"white\",\r\n                background:\r\n                  \"linear-gradient(90deg, rgba(20, 163, 214, 0.91) 15%, rgba(0,0,0,1) 85%)\",\r\n              }}\r\n            >\r\n              <Typography>Users</Typography>\r\n            </Box>\r\n            <Box sx={{ textAlign: \"center\" }}>\r\n              {users.map((user) => (\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"filled\"\r\n                  color=\"primary\"\r\n                  onClick={() =>\r\n                    navigate(\r\n                      `${constants.BASE_URL}/${constants.USER}/${user._id}`\r\n                    )\r\n                  }\r\n                  key={user._id}\r\n                  sx={{\r\n                    border: \"solid black 1px\",\r\n                    borderTop: \"none\",\r\n                    padding: \"15px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"start\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <ProfilePictureUpload\r\n                    profile={user}\r\n                    size=\"45\"\r\n                    noMargin\r\n                    margin=\"1\"\r\n                  />\r\n                  {user.username}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        {posts.length > 0 && (\r\n          <Box>\r\n            <Box\r\n              sx={{\r\n                width: \"100%\",\r\n                padding: \"15px\",\r\n                border: \"solid black 1px\",\r\n                borderTop: \"none\",\r\n                color: \"white\",\r\n                background:\r\n                  \"linear-gradient(90deg, rgba(20, 163, 214, 0.91) 15%, rgba(0,0,0,1) 85%)\",\r\n              }}\r\n            >\r\n              <Typography>{`Posts starting with tag \"${searchTerm}\"`}</Typography>\r\n            </Box>\r\n            <Box sx={{ textAlign: \"center\" }}>\r\n              {posts.map((post) => (\r\n                <>\r\n                  {showOverlay && (\r\n                    <PostOverlay\r\n                      onClose={toggleOverlay}\r\n                      post={post}\r\n                      postUser={post.user}\r\n                      profilePicture={post.user.profilePicture}\r\n                    />\r\n                  )}\r\n                  <Button\r\n                    onClick={toggleOverlay}\r\n                    fullWidth\r\n                    variant=\"filled\"\r\n                    color=\"primary\"\r\n                    sx={{\r\n                      border: \"solid black 1px\",\r\n                      borderTop: \"none\",\r\n                      padding: \"15px\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"start\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Typography key={post._id}>{post.body}</Typography>\r\n                  </Button>\r\n                </>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Stack,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\nimport { BiPlus } from \"react-icons/bi\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { constants } from \"../../constants\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport AddPostOverlay from \"../molecules/AddPostOverlay\";\r\n\r\nconst LeftPanel = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const [displayedFriends, setDisplayedFriends] = useState(2);\r\n  const navigate = useNavigate();\r\n  const friends = user.friends.slice(0, displayedFriends);\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n\r\n  const handleShowMoreFriends = () => {\r\n    if (displayedFriends + 2 <= user.friends.length) {\r\n      setDisplayedFriends(displayedFriends + 2);\r\n    } else {\r\n      setDisplayedFriends(user.friends.length);\r\n    }\r\n  };\r\n\r\n  // const toggleOverlay = () => {\r\n  //   setShowOverlay((prev) => !prev);\r\n  // };\r\n\r\n  return (\r\n    <Stack\r\n      sx={{\r\n        width: \"20%\",\r\n        height: \"100vh\",\r\n        padding: \"3rem\",\r\n        display: { xs: \"none\", sm: \"none\", md: \"none\", lg: \"block\" },\r\n      }}\r\n      elevation={3}\r\n      component={Paper}\r\n    >\r\n      {/* {showOverlay && <AddPostOverlay onClose={toggleOverlay} />} */}\r\n      <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <ProfilePictureUpload size={85} profile={user} />\r\n        <Typography\r\n          variant=\"h5\"\r\n          sx={{ marginLeft: \"1rem\", textTransform: \"capitalize\" }}\r\n        >\r\n          {user.username}\r\n        </Typography>\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button sx={{ margin: \"3rem 0\" }}>\r\n          <Link\r\n            to={`${constants.BASE_URL}/${constants.USER}/${user._id}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <CgProfile size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n            <Typography>Profile</Typography>\r\n          </Link>\r\n        </Button>\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button sx={{ margin: \"3rem 0\" }}>\r\n          <Link\r\n            to={`${constants.BASE_URL}/${constants.ADDPOST}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <BiPlus size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n            <Typography>Add a post</Typography>\r\n          </Link>\r\n        </Button>\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button sx={{ margin: \"3rem 0\" }}>\r\n          <Link\r\n            to={`${constants.BASE_URL}/${constants.FRIENDS}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FaUserFriends size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n            <Typography>Friends</Typography>\r\n          </Link>\r\n        </Button>\r\n        <hr />\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            // backgroundColor: \"grey\",\r\n          }}\r\n        >\r\n          {friends.map((friend, index) => (\r\n            <Button\r\n              sx={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n              color=\"success\"\r\n              onClick={() =>\r\n                navigate(\r\n                  `${constants.BASE_URL}/${constants.USER}/${friend.friendId}`\r\n                )\r\n              }\r\n              key={index}\r\n            >\r\n              <Typography>{friend.friendName}</Typography>\r\n              <hr style={{ width: \"100%\" }} />\r\n            </Button>\r\n          ))}\r\n          {displayedFriends < user.friends.length && (\r\n            <IconButton onClick={handleShowMoreFriends}>\r\n              <BiPlus />\r\n              <Typography>Show more friends</Typography>\r\n            </IconButton>\r\n          )}\r\n        </Box>\r\n        {user.friends.length <= 0 && <hr />}\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default LeftPanel;\r\n","export const ads = [\r\n  {\r\n    path: require(\"./assets/AnkaraUniv.png\"),\r\n    link: \"http://comp.eng.ankara.edu.tr/\",\r\n    alt: \"Ankara University\",\r\n  },\r\n  {\r\n    path: require(\"./assets/background/react2.webp\"),\r\n    link: \"https://react.dev/\",\r\n    alt: \"React JS\",\r\n  },\r\n  {\r\n    path: require(\"./assets/reacticons.png\"),\r\n    link: \"https://react-icons.github.io/react-icons\",\r\n    alt: \"React Icons\",\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Box, Stack, Typography, Paper, Button } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { logout } from \"../../storage/authReducers\";\r\nimport { ads } from \"../../ads\";\r\n\r\nconst RightPanel = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout(navigate));\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      sx={{\r\n        width: \"20%\",\r\n        height: \"100vh\",\r\n        padding: \"3rem\",\r\n        display: { xs: \"none\", sm: \"none\", md: \"none\", lg: \"block\" },\r\n      }}\r\n      elevation={3}\r\n      component={Paper}\r\n    >\r\n      <Box>\r\n        <Typography variant=\"h4\" color=\"primary\">\r\n          Sponsered\r\n        </Typography>\r\n        <hr style={{ margin: \"1rem 0\" }} />\r\n        {ads.map((ad) => (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n            key={ad.alt}\r\n          >\r\n            <a href={ad.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img\r\n                src={ad.path}\r\n                alt={ad.alt}\r\n                style={{\r\n                  marginBottom: \"2rem\",\r\n                  objectFit: \"cover\",\r\n                  cursor: \"pointer\",\r\n                  borderRadius: \"10%\",\r\n                  imageRendering: [\r\n                    \"-webkit-optimize-contrast\",\r\n                    \"crisp-edges\",\r\n                    \"pixelated\",\r\n                  ],\r\n                }}\r\n                width=\"100%\"\r\n                height=\"200px\"\r\n              />\r\n            </a>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      <hr />\r\n      <Box>\r\n        <Button\r\n          onClick={onLogout}\r\n          sx={{ display: \"flex\", alignItems: \"center\", margin: \"1rem 0\" }}\r\n        >\r\n          <FiLogOut size=\"35\" style={{ margin: \"0 1rem\" }} />\r\n          <Typography>Logout</Typography>\r\n        </Button>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default RightPanel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst ChatWindow = ({ setShowChatWindow, socket }) => {\r\n  const user = useSelector((state) => state.user);\r\n  const [selectedFriend, setSelectedFriend] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleFriendClick = (friend) => {\r\n    socket.emit(\"join_room\", \"-12\");\r\n    setSelectedFriend(friend);\r\n  };\r\n\r\n  const handleCloseChat = () => {\r\n    setSelectedFriend(null);\r\n    setShowChatWindow(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"chat message\", (message) => {\r\n      //   console.log(message);\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    // Clean up the socket connection on component unmount\r\n    //   return () => {\r\n    //     socket.disconnect();\r\n    //   };\r\n  }, [socket]);\r\n\r\n  const sendMessage = () => {\r\n    const chatMessage = {\r\n      sender: user.username,\r\n      receiver: selectedFriend.friendName,\r\n      message,\r\n    };\r\n    // Emit 'chat message' event to the server\r\n    socket.emit(\"chat message\", chatMessage);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          position: \"fixed\",\r\n          bottom: \"2rem\",\r\n          right: \"2rem\",\r\n          zIndex: 9999,\r\n          background: \"#fff\",\r\n          width: \"700px\",\r\n          height: \"500px\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.2)\",\r\n          padding: \"1rem\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"0.5rem\",\r\n            right: \"0.5rem\",\r\n          }}\r\n          onClick={handleCloseChat}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            height: \"calc(100% - 48px)\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: \"40%\",\r\n              borderRight: \"1px solid #ccc\",\r\n              padding: \"0 1rem\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\">Friends</Typography>\r\n            <List>\r\n              {user.friends.map((friend) => (\r\n                <ListItem\r\n                  key={friend.friendName}\r\n                  button\r\n                  onClick={() => handleFriendClick(friend)}\r\n                  sx={{\r\n                    backgroundColor:\r\n                      selectedFriend?.friendId === friend.friendId\r\n                        ? \"#f0f0f0\"\r\n                        : \"inherit\",\r\n                  }}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      alt={friend.friendName}\r\n                      src={friend.friendProfilePicture}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={friend.friendName} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              flex: 1,\r\n              padding: \"0 1rem\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            {selectedFriend ? (\r\n              <>\r\n                <Typography variant=\"h6\">\r\n                  Chat with {selectedFriend.friendName}\r\n                </Typography>\r\n                {/* Display chat conversation here */}\r\n                <Box\r\n                  sx={{\r\n                    flex: 1,\r\n                    backgroundColor: \"#f9f9f9\",\r\n                    borderRadius: \"4px\",\r\n                    marginTop: \"1rem\",\r\n                    padding: \"1rem\",\r\n                    overflow: \"auto\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    {/* Render the messages */}\r\n                    {messages.map((message, index) => (\r\n                      <div key={index}>\r\n                        <span>Sender:{message.sender}</span>\r\n                        {/* <span>{message.message}</span> */}\r\n                        <br />\r\n                        <span>{message.message}</span>\r\n                      </div>\r\n                    ))}\r\n\r\n                    {/* Input field and send button */}\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Chat here..\"\r\n                      onChange={(event) => setMessage(event.target.value)}\r\n                      value={message}\r\n                    />\r\n                    <button onClick={sendMessage}>Send</button>\r\n                  </div>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Typography variant=\"body1\">\r\n                Select a friend to start chatting\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { constants } from \"../../constants\";\r\nimport { getToken } from \"../../storage/authStorage\";\r\nimport Navbar from \"../organisms/Navbar/NavBar\";\r\nimport Footer from \"../organisms/Footer/Footer\";\r\nimport AllPosts from \"../organisms/AllPosts\";\r\nimport SearchBar from \"../organisms/SearchBar\";\r\nimport LeftPanel from \"../organisms/LeftPanel\";\r\nimport RightPanel from \"../organisms/RightPanel\";\r\nimport LoadingCircle from \"../atoms/LoadingCircle\";\r\nimport { LoadingScreen } from \"../atoms/LoadingScreen\";\r\nimport background from \"../../assets/background.jpeg\";\r\nimport { Box, Fab } from \"@mui/material\";\r\nimport ChatIcon from \"@mui/icons-material/Chat\";\r\nimport { fetchUser } from \"../../utils/fetchUser\";\r\nimport ChatWindow from \"../molecules/ChatWindow\";\r\nimport { io } from \"socket.io-client\";\r\n\r\n// const socket = io.connect(\"http://localhost:3000\");\r\nconst socket = io.connect(\"https://social-media-app-server-o938.onrender.com\");\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n  const loading = useSelector((state) => state.loading);\r\n  const [showChatWindow, setShowChatWindow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    !getToken() && navigate(`${constants.BASE_URL}/${constants.SIGN_IN}`);\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      fetchUser(navigate);\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  if (!user) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  const handleChatIconClick = () => {\r\n    setShowChatWindow(!showChatWindow);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {loading && <LoadingCircle />}\r\n      <SearchBar />\r\n      <hr style={{ margin: \"2rem 0\" }} />\r\n\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <LeftPanel />\r\n        <AllPosts />\r\n        <RightPanel />\r\n      </Box>\r\n\r\n      {showChatWindow ? (\r\n        <ChatWindow setShowChatWindow={setShowChatWindow} socket={socket} />\r\n      ) : (\r\n        <Fab\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={handleChatIconClick}\r\n          sx={{\r\n            position: \"fixed\",\r\n            bottom: \"2rem\",\r\n            right: \"2rem\",\r\n            zIndex: 9999,\r\n          }}\r\n        >\r\n          <ChatIcon />\r\n        </Fab>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["postSchema","yup","shape","body","required","min","hashtags","of","max","_ref","name","control","label","props","_objectWithoutProperties","_excluded","_jsx","Controller","render","_ref2","_ref2$field","field","onChange","onBlur","value","ref","fieldState","error","formState","_jsxs","_Fragment","children","TagsInput","_objectSpread","id","inputRef","placeHolder","Box","sx","textAlign","onSubmit","handleSubmit","loading","useSelector","state","Grid","container","component","display","justifyContent","alignItems","item","xs","sm","md","Paper","elevation","square","my","mx","flexDirection","Typography","variant","noValidate","mt","Button","type","fullWidth","mb","disabled","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","posts","setPosts","_useState5","_useState6","users","setUsers","_useState7","_useState8","searchTerm","setSearchTerm","_useState9","_useState10","showOverlay","setShowOverlay","toggleOverlay","prev","navigate","useNavigate","useEffect","delay","setTimeout","clearTimeout","handleSearch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_response$data","_users","_posts","wrap","_context","next","abrupt","api","concat","sent","data","t0","console","stop","apply","arguments","margin","TextField","onKeyPress","event","key","preventDefault","e","target","InputProps","startAdornment","InputAdornment","position","AiOutlineSearch","width","lg","length","padding","border","color","background","map","user","onClick","constants","_id","borderTop","ProfilePictureUpload","profile","size","noMargin","username","post","PostOverlay","onClose","postUser","profilePicture","displayedFriends","setDisplayedFriends","friends","slice","Stack","height","marginLeft","textTransform","Link","to","style","textDecoration","CgProfile","BiPlus","FaUserFriends","friend","index","friendId","friendName","IconButton","ads","path","require","link","alt","dispatch","useDispatch","ad","href","rel","src","marginBottom","objectFit","cursor","borderRadius","imageRendering","logout","FiLogOut","setShowChatWindow","socket","selectedFriend","setSelectedFriend","messages","setMessages","message","setMessage","on","prevMessages","_toConsumableArray","bottom","right","zIndex","boxShadow","top","CloseIcon","borderRight","overflow","List","ListItem","button","emit","handleFriendClick","backgroundColor","ListItemAvatar","Avatar","friendProfilePicture","ListItemText","primary","flex","marginTop","sender","placeholder","chatMessage","receiver","io","showChatWindow","getToken","fetchUser","LoadingScreen","Navbar","LoadingCircle","SearchBar","LeftPanel","AllPosts","RightPanel","ChatWindow","Fab","ChatIcon","Footer"],"sourceRoot":""}