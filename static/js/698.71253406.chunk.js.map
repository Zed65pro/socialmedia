{"version":3,"file":"static/js/698.71253406.chunk.js","mappings":"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","sources":["components/molecules/ProfileDetails.jsx","Schemas/profileSchema.js","components/atoms/DatePickerAtom.jsx","components/organisms/ProfileEdit.jsx","components/organisms/ProfileUser.jsx","components/pages/Profile.jsx"],"sourcesContent":["import { EmailOutlined } from \"@mui/icons-material\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { BsFileEarmarkPostFill } from \"react-icons/bs\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport { FiUser } from \"react-icons/fi\";\r\n\r\nconst ProfileDetails = ({ profile }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <EmailOutlined size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>{profile.email}</Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <FiUser size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>{profile.username}</Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <BsFileEarmarkPostFill size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>Posts {profile.posts.length}</Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <FaUserFriends size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>\r\n          Friends {profile.friends.length}\r\n        </Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import * as yup from \"yup\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst today = dayjs().startOf(\"day\"); // Get today's date\r\n\r\nconst usernameRegex = /^[a-zA-Z0-9_-]{3,10}$/;\r\n\r\nexport const profileSchema = yup.object().shape({\r\n  username: yup\r\n    .string(\"Username must be a string\")\r\n    .matches(\r\n      usernameRegex,\r\n      \"Username must be 3-10 characters long and can only contain alphanumeric characters, underscores and hyphens\"\r\n    )\r\n    .required(\"This field can't be empty\"),\r\n  email: yup\r\n    .string(\"Email must be a string\")\r\n    .email(\"Must be a valid email address\")\r\n    .required(\"This field can't be empty\"),\r\n  dateOfBirth: yup\r\n    .mixed()\r\n    .nullable(true) // Allow null values for dateOfBirth field\r\n    .test(\r\n      \"valid-date\",\r\n      \"Date of birth must be a valid date\",\r\n      (value) => value === null || dayjs(value).isValid()\r\n    )\r\n    .test(\r\n      \"max-date\",\r\n      \"Date of birth cannot be after today's date\",\r\n      (value) =>\r\n        value === null ||\r\n        dayjs(value).isBefore(today) ||\r\n        dayjs(value).isSame(today)\r\n    ),\r\n});\r\n","import { ErrorMessage } from \"@hookform/error-message\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nconst DatePickerAtom = ({ control, errors }) => {\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name=\"dateOfBirth\"\r\n      render={({ field, fieldState }) => (\r\n        <>\r\n          <DatePicker\r\n            {...field}\r\n            inputFormat=\"yyyy-MM-dd\"\r\n            label=\"Date of Birth\"\r\n            sx={{ width: \"100%\" }}\r\n            error={!!fieldState.error}\r\n          />\r\n          <ErrorMessage\r\n            errors={errors}\r\n            name=\"dateOfBirth\"\r\n            render={({ message }) => (\r\n              <Typography sx={{ color: \"red\" }}>{message}</Typography>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DatePickerAtom;\r\n","import React, { useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport FormInputText from \"../atoms/Input/FormInputFIeld\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport { profileSchema } from \"../../Schemas/profileSchema\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DatePickerAtom from \"../atoms/DatePickerAtom\";\r\nimport { updateUser } from \"../../storage/userReducers\";\r\n\r\nconst ProfileEdit = ({ setIsEdit, setProfile }) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const loading = useSelector((state) => state.loading);\r\n  const [error, setError] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      username: user ? user.username : \"\",\r\n      email: user ? user.email : \"\",\r\n      dateOfBirth: user ? dayjs(user.dateOfBirth) : null,\r\n    },\r\n    resolver: yupResolver(profileSchema),\r\n  });\r\n\r\n  const onSubmit = async (data, event) => {\r\n    event.preventDefault();\r\n\r\n    const username = event.target.username.value;\r\n    const email = event.target.email.value;\r\n    const dateOfBirth = new Date(data.dateOfBirth); // Convert dayjs object to Date object\r\n    const formattedDate = dayjs(dateOfBirth).format(\"YYYY MM DD\");\r\n\r\n    try {\r\n      dispatch(\r\n        updateUser(user._id, image, email, username, formattedDate, navigate)\r\n      );\r\n\r\n      setProfile((prev) => ({\r\n        ...prev,\r\n        username,\r\n        dateOfBirth: formattedDate,\r\n        email,\r\n        profilePicture: image ? image : user.profilePicture,\r\n      }));\r\n\r\n      setIsEdit(false);\r\n    } catch (err) {\r\n      setError(err.response);\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return <div>Loading...</div>; // Render a loading indicator while fetching data\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          my: 8,\r\n          mx: 4,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          padding: \"2rem\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h2\">Profile</Typography>\r\n        <ProfilePictureUpload\r\n          image={image}\r\n          setImage={setImage}\r\n          profile={user}\r\n        />\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          sx={{ mt: 1 }}\r\n        >\r\n          <FormInputText\r\n            control={control}\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            autoFocus\r\n          />\r\n          <FormInputText\r\n            control={control}\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            autoFocus\r\n          />\r\n          {error && (\r\n            <Typography\r\n              sx={{ textAlign: \"center\", color: \"red\" }}\r\n              position={\"center\"}\r\n              variant=\"h5\"\r\n            >\r\n              {error}\r\n            </Typography>\r\n          )}\r\n          <DatePickerAtom control={control} errors={errors} />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            disabled={loading}\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","import { Box, Button, IconButton, Paper, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\nimport ProfileDetails from \"../molecules/ProfileDetails\";\r\nimport ProfileEdit from \"./ProfileEdit\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LoadingScreen } from \"../atoms/LoadingScreen\";\r\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\r\nimport { HiOutlineUserRemove } from \"react-icons/hi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchUser } from \"../../utils/fetchUser\";\r\nimport { addFriend, removeFriend } from \"../../storage/userReducers\";\r\n\r\nconst ProfileUser = ({ id }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [profile, setProfile] = useState(user._id === id ? user : null);\r\n\r\n  useEffect(() => {\r\n    if (!profile && id) {\r\n      fetchUser(navigate, { id, setProfile });\r\n    }\r\n  }, [id, profile, navigate]);\r\n\r\n  const isFriend = () => {\r\n    return user.friends.some((friend) => friend.friendId === profile._id);\r\n  };\r\n\r\n  const onAddFriend = async () => {\r\n    try {\r\n      dispatch(addFriend(profile._id));\r\n    } catch (err) {\r\n      setError(err.response.data.error);\r\n    }\r\n  };\r\n\r\n  const onRemoveFriend = async () => {\r\n    try {\r\n      dispatch(removeFriend(profile._id));\r\n    } catch (err) {\r\n      setError(err.response.data.error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  if (!profile) return <LoadingScreen />;\r\n  else if (isEdit)\r\n    return <ProfileEdit setIsEdit={setIsEdit} setProfile={setProfile} />;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"5rem 0\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Paper\r\n          elevation={3}\r\n          sx={{\r\n            padding: \"2rem 2rem\",\r\n            display: \"flex\",\r\n            flexDirection: {\r\n              xs: \"column\",\r\n              lg: \"column\",\r\n            },\r\n          }}\r\n        >\r\n          <ProfilePictureUpload profile={profile} />\r\n          <div\r\n            style={{ borderRight: \"1px solid #ccc\", margin: \"0 1rem\" }}\r\n          ></div>\r\n          <ProfileDetails profile={profile} />\r\n          {profile._id === user._id ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              sx={{ width: { xs: \"90vw\", lg: \"30vw\" } }}\r\n              onClick={handleEdit}\r\n            >\r\n              Edit profile\r\n            </Button>\r\n          ) : !isFriend() ? (\r\n            <IconButton onClick={onAddFriend}>\r\n              <AiOutlineUserAdd style={{ color: \"green\" }} />\r\n            </IconButton>\r\n          ) : (\r\n            <IconButton onClick={onRemoveFriend}>\r\n              <HiOutlineUserRemove style={{ color: \"red\" }} />\r\n            </IconButton>\r\n          )}\r\n        </Paper>\r\n      </Box>\r\n      {error && error !== \"\" && (\r\n        <Typography\r\n          sx={{ textAlign: \"center\", color: \"red\" }}\r\n          position={\"center\"}\r\n          variant=\"h5\"\r\n        >\r\n          {error}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileUser;\r\n","import React from \"react\";\r\nimport Navbar from \"../organisms/Navbar/NavBar\";\r\nimport ProtectedPage from \"./ProtectedPage\";\r\nimport AllPosts from \"../organisms/AllPosts\";\r\nimport Footer from \"../organisms/Footer/Footer\";\r\nimport ProfileUser from \"../organisms/ProfileUser\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n  const { id } = useParams();\r\n\r\n  return (\r\n    <ProtectedPage>\r\n      <Navbar />\r\n      <Box>\r\n        <ProfileUser id={id} />\r\n        <hr />\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            margin: \"2rem 0\",\r\n          }}\r\n        >\r\n          <AllPosts userId={id} />\r\n        </Box>\r\n      </Box>\r\n      <Footer />\r\n    </ProtectedPage>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["_ref","profile","_jsxs","Box","sx","display","flexDirection","justifyContent","children","alignItems","_jsx","EmailOutlined","size","Typography","ml","email","style","border","borderBottom","margin","FiUser","username","BsFileEarmarkPostFill","posts","length","FaUserFriends","friends","today","dayjs","startOf","profileSchema","yup","shape","matches","required","dateOfBirth","nullable","test","value","isValid","isBefore","isSame","control","errors","Controller","name","render","_ref2","field","fieldState","_Fragment","DatePicker","_objectSpread","inputFormat","label","width","error","ErrorMessage","_ref3","message","color","setIsEdit","setProfile","navigate","useNavigate","dispatch","useDispatch","user","useSelector","state","loading","_useState","useState","_useState2","_slicedToArray","setError","_useState3","_useState4","image","setImage","_useForm","useForm","defaultValues","resolver","yupResolver","handleSubmit","formState","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","event","formattedDate","wrap","_context","prev","next","preventDefault","target","Date","format","updateUser","_id","profilePicture","err","response","stop","_x","_x2","apply","arguments","my","mx","padding","variant","ProfilePictureUpload","component","noValidate","mt","FormInputText","autoFocus","textAlign","position","DatePickerAtom","Button","type","fullWidth","mb","disabled","Footer","id","isEdit","_useState5","_useState6","useEffect","fetchUser","onAddFriend","addFriend","onRemoveFriend","_callee2","_context2","removeFriend","ProfileEdit","Paper","elevation","xs","lg","borderRight","ProfileDetails","onClick","some","friend","friendId","IconButton","HiOutlineUserRemove","AiOutlineUserAdd","LoadingScreen","useParams","ProtectedPage","Navbar","ProfileUser","AllPosts","userId"],"sourceRoot":""}