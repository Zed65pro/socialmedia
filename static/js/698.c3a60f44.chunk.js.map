{"version":3,"file":"static/js/698.c3a60f44.chunk.js","mappings":"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","sources":["components/molecules/ProfileDetails.jsx","Schemas/profileSchema.js","components/atoms/DatePickerAtom.jsx","components/organisms/ProfileEdit.jsx","components/organisms/ProfileUser.jsx","components/pages/Profile.jsx"],"sourcesContent":["import { EmailOutlined } from \"@mui/icons-material\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { BsFileEarmarkPostFill } from \"react-icons/bs\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport { FiUser } from \"react-icons/fi\";\r\n\r\nconst ProfileDetails = ({ profile }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <EmailOutlined size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>{profile.email}</Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <FiUser size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>{profile.username}</Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <BsFileEarmarkPostFill size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>Posts {profile.posts.length}</Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <FaUserFriends size=\"25\" />\r\n        <Typography sx={{ ml: \"5px\" }}>\r\n          Friends {profile.friends.length}\r\n        </Typography>\r\n      </Box>\r\n      <hr\r\n        style={{\r\n          border: \"none\",\r\n          borderBottom: \"1px solid #ccc\",\r\n          margin: \"1rem 0\",\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import * as yup from \"yup\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst today = dayjs().startOf(\"day\"); // Get today's date\r\n\r\nconst usernameRegex = /^[a-zA-Z0-9_-]{3,16}$/;\r\n\r\nexport const profileSchema = yup.object().shape({\r\n  username: yup\r\n    .string(\"Username must be a string\")\r\n    .matches(\r\n      usernameRegex,\r\n      \"Username must be 3-16 characters long and can only contain alphanumeric characters, underscores and hyphens\"\r\n    )\r\n    .required(\"This field can't be empty\"),\r\n  email: yup\r\n    .string(\"Email must be a string\")\r\n    .email(\"Must be a valid email address\")\r\n    .required(\"This field can't be empty\"),\r\n  dateOfBirth: yup\r\n    .mixed()\r\n    .nullable(true) // Allow null values for dateOfBirth field\r\n    .test(\r\n      \"valid-date\",\r\n      \"Date of birth must be a valid date\",\r\n      (value) => value === null || dayjs(value).isValid()\r\n    )\r\n    .test(\r\n      \"max-date\",\r\n      \"Date of birth cannot be after today's date\",\r\n      (value) =>\r\n        value === null ||\r\n        dayjs(value).isBefore(today) ||\r\n        dayjs(value).isSame(today)\r\n    ),\r\n});\r\n","import { ErrorMessage } from \"@hookform/error-message\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nconst DatePickerAtom = ({ control, errors }) => {\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name=\"dateOfBirth\"\r\n      render={({ field, fieldState }) => (\r\n        <>\r\n          <DatePicker\r\n            {...field}\r\n            inputFormat=\"yyyy-MM-dd\"\r\n            label=\"Date of Birth\"\r\n            sx={{ width: \"100%\" }}\r\n            error={!!fieldState.error}\r\n          />\r\n          <ErrorMessage\r\n            errors={errors}\r\n            name=\"dateOfBirth\"\r\n            render={({ message }) => (\r\n              <Typography sx={{ color: \"red\" }}>{message}</Typography>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DatePickerAtom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport FormInputText from \"../atoms/Input/FormInputFIeld\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { constants } from \"../../constants\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport { profileSchema } from \"../../Schemas/profileSchema\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\nimport api from \"../../api/api\";\r\nimport { fetchUser } from \"../../utils/fetchUser\";\r\nimport { DatePicker } from \"@mui/x-date-pickers-pro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport { updateUser } from \"../../storage/authReducers\";\r\nimport DatePickerAtom from \"../atoms/DatePickerAtom\";\r\n\r\nconst ProfileEdit = ({ setIsEdit }) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const loading = useSelector((state) => state.loading);\r\n  const [error, setError] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n\r\n  const {\r\n    handleSubmit,\r\n    reset,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      username: user ? user.username : \"\",\r\n      email: user ? user.email : \"\",\r\n      dateOfBirth: user ? dayjs(user.dateOfBirth) : null,\r\n    },\r\n    resolver: yupResolver(profileSchema),\r\n  });\r\n\r\n  const onSubmit = async (data, event) => {\r\n    event.preventDefault();\r\n\r\n    const username = event.target.username.value;\r\n    const email = event.target.email.value;\r\n    const dateOfBirth = new Date(data.dateOfBirth); // Convert dayjs object to Date object\r\n    const formattedDate = dayjs(dateOfBirth).format(\"YYYY MM DD\");\r\n\r\n    try {\r\n      dispatch(\r\n        updateUser(user._id, image, email, username, formattedDate, navigate)\r\n      );\r\n\r\n      setIsEdit(false);\r\n    } catch (err) {\r\n      setError(err.response);\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return <div>Loading...</div>; // Render a loading indicator while fetching data\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          my: 8,\r\n          mx: 4,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          padding: \"2rem\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h2\">Profile</Typography>\r\n        <ProfilePictureUpload\r\n          image={image}\r\n          setImage={setImage}\r\n          profile={user}\r\n        />\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          sx={{ mt: 1 }}\r\n        >\r\n          <FormInputText\r\n            control={control}\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            autoFocus\r\n          />\r\n          <FormInputText\r\n            control={control}\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            autoFocus\r\n          />\r\n          {error && (\r\n            <Typography\r\n              sx={{ textAlign: \"center\", color: \"red\" }}\r\n              position={\"center\"}\r\n              variant=\"h5\"\r\n            >\r\n              {error}\r\n            </Typography>\r\n          )}\r\n          <DatePickerAtom control={control} errors={errors} />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            disabled={loading}\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","import { Box, Button, IconButton, Paper } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport ProfilePictureUpload from \"../molecules/ProfilePictureUpload\";\r\nimport ProfileDetails from \"../molecules/ProfileDetails\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProfileEdit from \"./ProfileEdit\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport { LoadingScreen } from \"../atoms/LoadingScreen\";\r\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\r\nimport { HiOutlineUserRemove } from \"react-icons/hi\";\r\nimport { addFriend, removeFriend } from \"../../storage/authReducers\";\r\n\r\nconst ProfileUser = ({ profile }) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const [error, setError] = useState(\"\");\r\n  const isFriend = () => {\r\n    return user.friends.some((friend) => friend.friendId === profile._id);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  if (!user || !profile) return <LoadingScreen />;\r\n  if (isEdit) return <ProfileEdit setIsEdit={setIsEdit} />;\r\n\r\n  const onAddFriend = async () => {\r\n    try {\r\n      dispatch(addFriend(profile._id));\r\n    } catch (err) {\r\n      setError(err.response.data.error);\r\n    }\r\n  };\r\n\r\n  const onRemoveFriend = async () => {\r\n    try {\r\n      dispatch(removeFriend(profile._id));\r\n    } catch (err) {\r\n      setError(err.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"5rem 0\",\r\n      }}\r\n    >\r\n      <Paper elevation={3} sx={{ padding: \"2rem 5rem\", display: \"flex\" }}>\r\n        <ProfilePictureUpload profile={profile} />\r\n        <div style={{ borderRight: \"1px solid #ccc\", margin: \"0 1rem\" }}></div>\r\n        <ProfileDetails profile={profile} />\r\n      </Paper>\r\n      {profile._id === user._id ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          sx={{ width: \"640px\" }}\r\n          onClick={handleEdit}\r\n        >\r\n          Edit profile\r\n        </Button>\r\n      ) : !isFriend() ? (\r\n        <IconButton onClick={onAddFriend}>\r\n          <AiOutlineUserAdd style={{ color: \"green\" }} />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton onClick={onRemoveFriend}>\r\n          <HiOutlineUserRemove style={{ color: \"red\" }} />\r\n        </IconButton>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../organisms/Navbar/NavBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { fetchUser } from \"../../utils/fetchUser\";\r\nimport AllPosts from \"../organisms/AllPosts\";\r\nimport ProfileUser from \"../organisms/ProfileUser\";\r\nimport Footer from \"../organisms/Footer/Footer\";\r\nimport { LoadingScreen } from \"../atoms/LoadingScreen\";\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user);\r\n  const { id } = useParams();\r\n\r\n  const loading = useSelector((state) => state.loader);\r\n  const error = useSelector((state) => state.error);\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      fetchUser(navigate);\r\n    } else if (!profile && id) {\r\n      fetchUser(navigate, { id, setProfile });\r\n    }\r\n\r\n    return () => {\r\n      if (profile) {\r\n        setProfile(null); // Reset profile state to null when navigating away\r\n      }\r\n    };\r\n  }, [user, id, profile, navigate]);\r\n\r\n  if (!user || !profile) return <LoadingScreen />;\r\n  return (\r\n    <>\r\n      {loading && <p>Loading...</p>}\r\n      <Navbar />\r\n\r\n      <Box>\r\n        <ProfileUser profile={profile} />\r\n        <hr />\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <AllPosts userId={profile._id} />\r\n        </Box>\r\n      </Box>\r\n      {error && (\r\n        <Typography\r\n          sx={{ textAlign: \"center\", color: \"red\" }}\r\n          position={\"center\"}\r\n        >\r\n          {error.message}\r\n        </Typography>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["_ref","profile","_jsxs","Box","sx","display","flexDirection","justifyContent","children","alignItems","_jsx","EmailOutlined","size","Typography","ml","email","style","border","borderBottom","margin","FiUser","username","BsFileEarmarkPostFill","posts","length","FaUserFriends","friends","today","dayjs","startOf","profileSchema","yup","shape","matches","required","dateOfBirth","nullable","test","value","isValid","isBefore","isSame","control","errors","Controller","name","render","_ref2","field","fieldState","_Fragment","DatePicker","_objectSpread","inputFormat","label","width","error","ErrorMessage","_ref3","message","color","setIsEdit","navigate","useNavigate","dispatch","useDispatch","user","useSelector","state","loading","_useState","useState","_useState2","_slicedToArray","setError","_useState3","_useState4","image","setImage","_useForm","useForm","defaultValues","resolver","yupResolver","handleSubmit","reset","formState","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","event","formattedDate","wrap","_context","prev","next","preventDefault","target","Date","format","updateUser","_id","err","response","stop","_x","_x2","apply","arguments","my","mx","padding","variant","ProfilePictureUpload","component","noValidate","mt","FormInputText","autoFocus","textAlign","position","DatePickerAtom","Button","type","fullWidth","mb","disabled","Footer","isEdit","LoadingScreen","ProfileEdit","onAddFriend","addFriend","onRemoveFriend","_callee2","_context2","removeFriend","Paper","elevation","borderRight","ProfileDetails","onClick","some","friend","friendId","IconButton","HiOutlineUserRemove","AiOutlineUserAdd","id","useParams","loader","setProfile","useEffect","fetchUser","Navbar","ProfileUser","AllPosts","userId"],"sourceRoot":""}